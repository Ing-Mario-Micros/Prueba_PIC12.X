

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 04 15:51:01 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	dabs	1,0x5E,2
    19  0000                     
    20                           ; Version 2.10
    21                           ; Generated 31/07/2019 GMT
    22                           ; 
    23                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC12F675 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0019                     	;# 
    68  001E                     	;# 
    69  001F                     	;# 
    70  0081                     	;# 
    71  0085                     	;# 
    72  008C                     	;# 
    73  008E                     	;# 
    74  0090                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0096                     	;# 
    78  0099                     	;# 
    79  009A                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009C                     	;# 
    83  009D                     	;# 
    84  009E                     	;# 
    85  009F                     	;# 
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  000A                     	;# 
    93  000B                     	;# 
    94  000C                     	;# 
    95  000E                     	;# 
    96  000E                     	;# 
    97  000F                     	;# 
    98  0010                     	;# 
    99  0019                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  008C                     	;# 
   105  008E                     	;# 
   106  0090                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0096                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118                           
   119                           	psect	idataBANK0
   120  02D0                     __pidataBANK0:	
   121                           
   122                           ;initializer for _Hum
   123  02D0  3414               	retlw	20
   124                           
   125                           ;initializer for _Temp
   126  02D1  340A               	retlw	10
   127  0001                     _TMR0	set	1
   128  0005                     _GPIO	set	5
   129  0019                     _CMCON	set	25
   130  0028                     _GPIO0	set	40
   131  002A                     _GP2	set	42
   132  002D                     _GPIO5	set	45
   133  005F                     _GIE	set	95
   134  005D                     _T0IE	set	93
   135  005A                     _T0IF	set	90
   136  002C                     _GPIO4	set	44
   137  0029                     _GP1	set	41
   138  0081                     _OPTION_REG	set	129
   139  0095                     _WPU	set	149
   140  0085                     _TRISIO	set	133
   141  009F                     _ANSEL	set	159
   142  042D                     _TRISIO5	set	1069
   143                           
   144                           ; #config settings
   145  0000                     
   146                           	psect	cinit
   147  000C                     start_initialization:	
   148  000C                     __initialization:	
   149                           
   150                           ; Initialize objects allocated to BANK0
   151  000C  22D0               	fcall	__pidataBANK0	;fetch initializer
   152  000D  00B3               	movwf	__pdataBANK0& (0+127)
   153  000E  22D1               	fcall	__pidataBANK0+1	;fetch initializer
   154  000F  00B4               	movwf	(__pdataBANK0+1)& (0+127)
   155                           
   156                           ; Clear objects allocated to BANK0
   157  0010  01B1               	clrf	__pbssBANK0& (0+127)
   158  0011  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   159  0012                     end_of_initialization:	
   160                           ;End of C runtime variable initialization code
   161                           
   162  0012                     __end_of__initialization:	
   163  0012  0183               	clrf	3
   164  0013  2814               	ljmp	_main	;jump to C main() function
   165                           
   166                           	psect	bssBANK0
   167  0031                     __pbssBANK0:	
   168  0031                     _bandera:	
   169  0031                     	ds	1
   170  0032                     _Che:	
   171  0032                     	ds	1
   172                           
   173                           	psect	dataBANK0
   174  0033                     __pdataBANK0:	
   175  0033                     _Hum:	
   176  0033                     	ds	1
   177  0034                     _Temp:	
   178  0034                     	ds	1
   179                           
   180                           	psect	cstackBANK0
   181  0020                     __pcstackBANK0:	
   182  0020                     ?_LeerByte:	
   183  0020                     ?_Transmitir:	
   184                           ; 1 bytes @ 0x0
   185                           
   186  0020                     ?_LeerBit:	
   187                           ; 1 bytes @ 0x0
   188                           
   189  0020                     ?_Retardo:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0020                     ?_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0020                     ?_ISR:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0020                     ??_ISR:	
   199                           ; 1 bytes @ 0x0
   200                           
   201                           
   202                           ; 1 bytes @ 0x0
   203  0020                     	ds	2
   204  0022                     ??_LeerBit:	
   205  0022                     ??_Retardo:	
   206                           ; 1 bytes @ 0x2
   207                           
   208  0022                     ?___awdiv:	
   209                           ; 1 bytes @ 0x2
   210                           
   211  0022                     ?___awmod:	
   212                           ; 2 bytes @ 0x2
   213                           
   214  0022                     ___awdiv@divisor:	
   215                           ; 2 bytes @ 0x2
   216                           
   217  0022                     ___awmod@divisor:	
   218                           ; 2 bytes @ 0x2
   219                           
   220                           
   221                           ; 2 bytes @ 0x2
   222  0022                     	ds	1
   223  0023                     ??_Transmitir:	
   224  0023                     LeerBit@res:	
   225                           ; 1 bytes @ 0x3
   226                           
   227                           
   228                           ; 1 bytes @ 0x3
   229  0023                     	ds	1
   230  0024                     ??_LeerByte:	
   231  0024                     ___awdiv@dividend:	
   232                           ; 1 bytes @ 0x4
   233                           
   234  0024                     ___awmod@dividend:	
   235                           ; 2 bytes @ 0x4
   236                           
   237                           
   238                           ; 2 bytes @ 0x4
   239  0024                     	ds	1
   240  0025                     Transmitir@a:	
   241                           
   242                           ; 1 bytes @ 0x5
   243  0025                     	ds	1
   244  0026                     ??___awdiv:	
   245  0026                     ??___awmod:	
   246                           ; 1 bytes @ 0x6
   247                           
   248  0026                     Transmitir@b:	
   249                           ; 1 bytes @ 0x6
   250                           
   251                           
   252                           ; 1 bytes @ 0x6
   253  0026                     	ds	1
   254  0027                     LeerByte@res:	
   255  0027                     Transmitir@c:	
   256                           ; 1 bytes @ 0x7
   257                           
   258  0027                     ___awdiv@counter:	
   259                           ; 1 bytes @ 0x7
   260                           
   261  0027                     ___awmod@counter:	
   262                           ; 1 bytes @ 0x7
   263                           
   264                           
   265                           ; 1 bytes @ 0x7
   266  0027                     	ds	1
   267  0028                     LeerByte@i:	
   268  0028                     Transmitir@d:	
   269                           ; 1 bytes @ 0x8
   270                           
   271  0028                     ___awdiv@sign:	
   272                           ; 1 bytes @ 0x8
   273                           
   274  0028                     ___awmod@sign:	
   275                           ; 1 bytes @ 0x8
   276                           
   277                           
   278                           ; 1 bytes @ 0x8
   279  0028                     	ds	1
   280  0029                     Transmitir@e:	
   281  0029                     ___awdiv@quotient:	
   282                           ; 1 bytes @ 0x9
   283                           
   284                           
   285                           ; 2 bytes @ 0x9
   286  0029                     	ds	1
   287  002A                     Transmitir@f:	
   288                           
   289                           ; 1 bytes @ 0xA
   290  002A                     	ds	1
   291  002B                     Transmitir@g:	
   292                           
   293                           ; 1 bytes @ 0xB
   294  002B                     	ds	1
   295  002C                     Transmitir@h:	
   296                           
   297                           ; 1 bytes @ 0xC
   298  002C                     	ds	1
   299  002D                     Transmitir@BufferTx:	
   300                           
   301                           ; 1 bytes @ 0xD
   302  002D                     	ds	1
   303  002E                     ??_main:	
   304                           
   305                           ; 1 bytes @ 0xE
   306  002E                     	ds	3
   307                           
   308                           	psect	maintext
   309  0014                     __pmaintext:	
   310 ;;
   311 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   312 ;;
   313 ;; *************** function _main *****************
   314 ;; Defined at:
   315 ;;		line 43 in file "Main12F.c"
   316 ;; Parameters:    Size  Location     Type
   317 ;;		None
   318 ;; Auto vars:     Size  Location     Type
   319 ;;		None
   320 ;; Return value:  Size  Location     Type
   321 ;;                  1    wreg      void 
   322 ;; Registers used:
   323 ;;		wreg, status,2, status,0, pclath, cstack
   324 ;; Tracked objects:
   325 ;;		On entry : B00/0
   326 ;;		On exit  : 0/0
   327 ;;		Unchanged: 0/0
   328 ;; Data sizes:     COMMON   BANK0
   329 ;;      Params:         0       0
   330 ;;      Locals:         0       0
   331 ;;      Temps:          0       3
   332 ;;      Totals:         0       3
   333 ;;Total ram usage:        3 bytes
   334 ;; Hardware stack levels required when called:    3
   335 ;; This function calls:
   336 ;;		_LeerByte
   337 ;;		_Transmitir
   338 ;;		___awdiv
   339 ;;		___awmod
   340 ;; This function is called by:
   341 ;;		Startup code after reset
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           
   346                           ;psect for function _main
   347  0014                     _main:	
   348  0014                     l1191:	
   349                           ;incstack = 0
   350                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   351                           
   352                           
   353                           ;Main12F.c: 45:     ANSEL = 0x00;
   354  0014  1683               	bsf	3,5	;RP0=1, select bank1
   355  0015  019F               	clrf	31	;volatile
   356  0016                     l1193:	
   357                           
   358                           ;Main12F.c: 46:     CMCON = 0x07;
   359  0016  3007               	movlw	7
   360  0017  1283               	bcf	3,5	;RP0=0, select bank0
   361  0018  0099               	movwf	25	;volatile
   362  0019                     l1195:	
   363                           
   364                           ;Main12F.c: 47:     TRISIO = 0b00100000;
   365  0019  3020               	movlw	32
   366  001A  1683               	bsf	3,5	;RP0=1, select bank1
   367  001B  0085               	movwf	5	;volatile
   368                           
   369                           ;Main12F.c: 48:     GPIO = 0;
   370  001C  1283               	bcf	3,5	;RP0=0, select bank0
   371  001D  0185               	clrf	5	;volatile
   372                           
   373                           ;Main12F.c: 49:     WPU=0;
   374  001E  1683               	bsf	3,5	;RP0=1, select bank1
   375  001F  0195               	clrf	21	;volatile
   376  0020                     l1197:	
   377                           
   378                           ;Main12F.c: 50:     GP1=1;
   379  0020  1283               	bcf	3,5	;RP0=0, select bank0
   380  0021  1485               	bsf	5,1	;volatile
   381  0022                     l1199:	
   382                           
   383                           ;Main12F.c: 51:     GPIO4=1;
   384  0022  1605               	bsf	5,4	;volatile
   385  0023                     l1201:	
   386                           
   387                           ;Main12F.c: 54:     OPTION_REG=0xC7;
   388  0023  30C7               	movlw	199
   389  0024  1683               	bsf	3,5	;RP0=1, select bank1
   390  0025  0081               	movwf	1	;volatile
   391  0026                     l1203:	
   392                           
   393                           ;Main12F.c: 55:     T0IF=0;
   394  0026  110B               	bcf	11,2	;volatile
   395  0027                     l1205:	
   396                           
   397                           ;Main12F.c: 56:     TMR0=0;
   398  0027  1283               	bcf	3,5	;RP0=0, select bank0
   399  0028  0181               	clrf	1	;volatile
   400  0029                     l1207:	
   401                           
   402                           ;Main12F.c: 59:     T0IE=1;
   403  0029  168B               	bsf	11,5	;volatile
   404  002A                     l1209:	
   405                           
   406                           ;Main12F.c: 61:     GIE=1;
   407  002A  178B               	bsf	11,7	;volatile
   408  002B                     l1211:	
   409                           
   410                           ;Main12F.c: 62:     TRISIO5=1;
   411  002B  1683               	bsf	3,5	;RP0=1, select bank1
   412  002C  1685               	bsf	5,5	;volatile
   413                           
   414                           ;Main12F.c: 63:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   415  002D  3006               	movlw	6
   416  002E  1283               	bcf	3,5	;RP0=0, select bank0
   417  002F  00B0               	movwf	??_main+2
   418  0030  3013               	movlw	19
   419  0031  00AF               	movwf	??_main+1
   420  0032  30AD               	movlw	173
   421  0033  00AE               	movwf	??_main
   422  0034                     u1137:	
   423  0034  0BAE               	decfsz	??_main,f
   424  0035  2834               	goto	u1137
   425  0036  0BAF               	decfsz	??_main+1,f
   426  0037  2834               	goto	u1137
   427  0038  0BB0               	decfsz	??_main+2,f
   428  0039  2834               	goto	u1137
   429  003A  283B               	nop2
   430  003B                     l1213:	
   431                           
   432                           ;Main12F.c: 64:     GP1=0;
   433  003B  1283               	bcf	3,5	;RP0=0, select bank0
   434  003C  1085               	bcf	5,1	;volatile
   435  003D                     l55:	
   436                           ;Main12F.c: 65:     while(1){
   437                           
   438                           
   439                           ;Main12F.c: 66:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   440  003D  3006               	movlw	6
   441  003E  00B0               	movwf	??_main+2
   442  003F  3013               	movlw	19
   443  0040  00AF               	movwf	??_main+1
   444  0041  30AD               	movlw	173
   445  0042  00AE               	movwf	??_main
   446  0043                     u1147:	
   447  0043  0BAE               	decfsz	??_main,f
   448  0044  2843               	goto	u1147
   449  0045  0BAF               	decfsz	??_main+1,f
   450  0046  2843               	goto	u1147
   451  0047  0BB0               	decfsz	??_main+2,f
   452  0048  2843               	goto	u1147
   453  0049  284A               	nop2
   454  004A                     l1215:	
   455                           
   456                           ;Main12F.c: 67:         bandera=0;
   457  004A  1283               	bcf	3,5	;RP0=0, select bank0
   458  004B  01B1               	clrf	_bandera
   459  004C                     l1217:	
   460                           
   461                           ;Main12F.c: 68:         TRISIO5=0;
   462  004C  1683               	bsf	3,5	;RP0=1, select bank1
   463  004D  1285               	bcf	5,5	;volatile
   464  004E                     l1219:	
   465                           
   466                           ;Main12F.c: 69:         GPIO5=0;
   467  004E  1283               	bcf	3,5	;RP0=0, select bank0
   468  004F  1285               	bcf	5,5	;volatile
   469  0050                     l1221:	
   470                           
   471                           ;Main12F.c: 70:         _delay((unsigned long)((18)*(4000000/4000.0)));
   472  0050  3018               	movlw	24
   473  0051  00AF               	movwf	??_main+1
   474  0052  305F               	movlw	95
   475  0053  00AE               	movwf	??_main
   476  0054                     u1157:	
   477  0054  0BAE               	decfsz	??_main,f
   478  0055  2854               	goto	u1157
   479  0056  0BAF               	decfsz	??_main+1,f
   480  0057  2854               	goto	u1157
   481  0058                     l1223:	
   482                           
   483                           ;Main12F.c: 71:         TRISIO5=1;
   484  0058  1683               	bsf	3,5	;RP0=1, select bank1
   485  0059  1685               	bsf	5,5	;volatile
   486                           
   487                           ;Main12F.c: 72:         TMR0=0;
   488  005A  1283               	bcf	3,5	;RP0=0, select bank0
   489  005B  0181               	clrf	1	;volatile
   490                           
   491                           ;Main12F.c: 73:         while(GPIO5==1){
   492  005C  2863               	goto	l56
   493  005D                     l1225:	
   494                           
   495                           ;Main12F.c: 74:             if(bandera==1)break;
   496  005D  0331               	decf	_bandera,w
   497  005E  1D03               	btfss	3,2
   498  005F  2861               	goto	u1051
   499  0060  2862               	goto	u1050
   500  0061                     u1051:	
   501  0061  2863               	goto	l56
   502  0062                     u1050:	
   503  0062  2867               	goto	l1229
   504  0063                     l56:	
   505                           ;Main12F.c: 75:         }
   506                           
   507                           
   508                           ;Main12F.c: 73:         while(GPIO5==1){
   509  0063  1A85               	btfsc	5,5	;volatile
   510  0064  2866               	goto	u1061
   511  0065  2867               	goto	u1060
   512  0066                     u1061:	
   513  0066  285D               	goto	l1225
   514  0067                     u1060:	
   515  0067                     l1229:	
   516                           
   517                           ;Main12F.c: 76:         _delay((unsigned long)((120)*(4000000/4000000.0)));
   518  0067  3027               	movlw	39
   519  0068  00AE               	movwf	??_main
   520  0069                     u1167:	
   521  0069  0BAE               	decfsz	??_main,f
   522  006A  2869               	goto	u1167
   523  006B  286C               	nop2
   524  006C                     l1231:	
   525                           
   526                           ;Main12F.c: 77:         TMR0=0;
   527  006C  1283               	bcf	3,5	;RP0=0, select bank0
   528  006D  0181               	clrf	1	;volatile
   529                           
   530                           ;Main12F.c: 78:         while(GPIO5==1){
   531  006E  2875               	goto	l60
   532  006F                     l1233:	
   533                           
   534                           ;Main12F.c: 79:             if(bandera==1)break;
   535  006F  0331               	decf	_bandera,w
   536  0070  1D03               	btfss	3,2
   537  0071  2873               	goto	u1071
   538  0072  2874               	goto	u1070
   539  0073                     u1071:	
   540  0073  2875               	goto	l60
   541  0074                     u1070:	
   542  0074  2879               	goto	l1237
   543  0075                     l60:	
   544                           ;Main12F.c: 80:         }
   545                           
   546                           
   547                           ;Main12F.c: 78:         while(GPIO5==1){
   548  0075  1A85               	btfsc	5,5	;volatile
   549  0076  2878               	goto	u1081
   550  0077  2879               	goto	u1080
   551  0078                     u1081:	
   552  0078  286F               	goto	l1233
   553  0079                     u1080:	
   554  0079                     l1237:	
   555                           
   556                           ;Main12F.c: 81:         Hum=LeerByte();
   557  0079  22A0               	fcall	_LeerByte
   558  007A  1283               	bcf	3,5	;RP0=0, select bank0
   559  007B  00AE               	movwf	??_main
   560  007C  082E               	movf	??_main,w
   561  007D  00B3               	movwf	_Hum
   562                           
   563                           ;Main12F.c: 82:         LeerByte();
   564  007E  22A0               	fcall	_LeerByte
   565                           
   566                           ;Main12F.c: 83:         Temp=LeerByte();
   567  007F  22A0               	fcall	_LeerByte
   568  0080  1283               	bcf	3,5	;RP0=0, select bank0
   569  0081  00AE               	movwf	??_main
   570  0082  082E               	movf	??_main,w
   571  0083  00B4               	movwf	_Temp
   572                           
   573                           ;Main12F.c: 84:         LeerByte();
   574  0084  22A0               	fcall	_LeerByte
   575                           
   576                           ;Main12F.c: 85:         Che=LeerByte();
   577  0085  22A0               	fcall	_LeerByte
   578  0086  1283               	bcf	3,5	;RP0=0, select bank0
   579  0087  00AE               	movwf	??_main
   580  0088  082E               	movf	??_main,w
   581  0089  00B2               	movwf	_Che
   582  008A                     l1239:	
   583                           
   584                           ;Main12F.c: 86:         if(bandera==1){
   585  008A  0331               	decf	_bandera,w
   586  008B  1D03               	btfss	3,2
   587  008C  288E               	goto	u1091
   588  008D  288F               	goto	u1090
   589  008E                     u1091:	
   590  008E  2892               	goto	l1243
   591  008F                     u1090:	
   592  008F                     l1241:	
   593                           
   594                           ;Main12F.c: 87:             bandera=0;
   595  008F  01B1               	clrf	_bandera
   596                           
   597                           ;Main12F.c: 88:             Temp=0;
   598  0090  01B4               	clrf	_Temp
   599                           
   600                           ;Main12F.c: 89:             Hum=0;
   601  0091  01B3               	clrf	_Hum
   602  0092                     l1243:	
   603                           
   604                           ;Main12F.c: 91:         Transmitir('T');
   605  0092  3054               	movlw	84
   606  0093  20F4               	fcall	_Transmitir
   607  0094                     l1245:	
   608                           
   609                           ;Main12F.c: 92:         Transmitir(Temp/10 + 48);
   610  0094  300A               	movlw	10
   611  0095  1283               	bcf	3,5	;RP0=0, select bank0
   612  0096  00A2               	movwf	___awdiv@divisor
   613  0097  3000               	movlw	0
   614  0098  00A3               	movwf	___awdiv@divisor+1
   615  0099  0834               	movf	_Temp,w
   616  009A  00AE               	movwf	??_main
   617  009B  01AF               	clrf	??_main+1
   618  009C  082E               	movf	??_main,w
   619  009D  00A4               	movwf	___awdiv@dividend
   620  009E  082F               	movf	??_main+1,w
   621  009F  00A5               	movwf	___awdiv@dividend+1
   622  00A0  21A9               	fcall	___awdiv
   623  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   624  00A2  0822               	movf	?___awdiv,w
   625  00A3  3E30               	addlw	48
   626  00A4  20F4               	fcall	_Transmitir
   627  00A5                     l1247:	
   628                           
   629                           ;Main12F.c: 93:         Transmitir(Temp%10 + 48);
   630  00A5  300A               	movlw	10
   631  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   632  00A7  00A2               	movwf	___awmod@divisor
   633  00A8  3000               	movlw	0
   634  00A9  00A3               	movwf	___awmod@divisor+1
   635  00AA  0834               	movf	_Temp,w
   636  00AB  00AE               	movwf	??_main
   637  00AC  01AF               	clrf	??_main+1
   638  00AD  082E               	movf	??_main,w
   639  00AE  00A4               	movwf	___awmod@dividend
   640  00AF  082F               	movf	??_main+1,w
   641  00B0  00A5               	movwf	___awmod@dividend+1
   642  00B1  2211               	fcall	___awmod
   643  00B2  1283               	bcf	3,5	;RP0=0, select bank0
   644  00B3  0822               	movf	?___awmod,w
   645  00B4  3E30               	addlw	48
   646  00B5  20F4               	fcall	_Transmitir
   647  00B6                     l1249:	
   648                           
   649                           ;Main12F.c: 94:         Transmitir(' ');
   650  00B6  3020               	movlw	32
   651  00B7  20F4               	fcall	_Transmitir
   652  00B8                     l1251:	
   653                           
   654                           ;Main12F.c: 95:         Transmitir('H');
   655  00B8  3048               	movlw	72
   656  00B9  20F4               	fcall	_Transmitir
   657  00BA                     l1253:	
   658                           
   659                           ;Main12F.c: 96:         Transmitir(Hum/10 + 48);
   660  00BA  300A               	movlw	10
   661  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   662  00BC  00A2               	movwf	___awdiv@divisor
   663  00BD  3000               	movlw	0
   664  00BE  00A3               	movwf	___awdiv@divisor+1
   665  00BF  0833               	movf	_Hum,w
   666  00C0  00AE               	movwf	??_main
   667  00C1  01AF               	clrf	??_main+1
   668  00C2  082E               	movf	??_main,w
   669  00C3  00A4               	movwf	___awdiv@dividend
   670  00C4  082F               	movf	??_main+1,w
   671  00C5  00A5               	movwf	___awdiv@dividend+1
   672  00C6  21A9               	fcall	___awdiv
   673  00C7  1283               	bcf	3,5	;RP0=0, select bank0
   674  00C8  0822               	movf	?___awdiv,w
   675  00C9  3E30               	addlw	48
   676  00CA  20F4               	fcall	_Transmitir
   677  00CB                     l1255:	
   678                           
   679                           ;Main12F.c: 97:         Transmitir(Hum%10 + 48);
   680  00CB  300A               	movlw	10
   681  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   682  00CD  00A2               	movwf	___awmod@divisor
   683  00CE  3000               	movlw	0
   684  00CF  00A3               	movwf	___awmod@divisor+1
   685  00D0  0833               	movf	_Hum,w
   686  00D1  00AE               	movwf	??_main
   687  00D2  01AF               	clrf	??_main+1
   688  00D3  082E               	movf	??_main,w
   689  00D4  00A4               	movwf	___awmod@dividend
   690  00D5  082F               	movf	??_main+1,w
   691  00D6  00A5               	movwf	___awmod@dividend+1
   692  00D7  2211               	fcall	___awmod
   693  00D8  1283               	bcf	3,5	;RP0=0, select bank0
   694  00D9  0822               	movf	?___awmod,w
   695  00DA  3E30               	addlw	48
   696  00DB  20F4               	fcall	_Transmitir
   697  00DC                     l1257:	
   698                           
   699                           ;Main12F.c: 98:         Transmitir('\n');
   700  00DC  300A               	movlw	10
   701  00DD  20F4               	fcall	_Transmitir
   702  00DE                     l1259:	
   703                           
   704                           ;Main12F.c: 99:         GP1=0;
   705  00DE  1283               	bcf	3,5	;RP0=0, select bank0
   706  00DF  1085               	bcf	5,1	;volatile
   707  00E0                     l1261:	
   708                           
   709                           ;Main12F.c: 100:         if(Hum==48){
   710  00E0  3030               	movlw	48
   711  00E1  0633               	xorwf	_Hum,w
   712  00E2  1D03               	btfss	3,2
   713  00E3  28E5               	goto	u1101
   714  00E4  28E6               	goto	u1100
   715  00E5                     u1101:	
   716  00E5  28E8               	goto	l65
   717  00E6                     u1100:	
   718  00E6                     l1263:	
   719                           
   720                           ;Main12F.c: 101:             GP1=1;
   721  00E6  1485               	bsf	5,1	;volatile
   722                           
   723                           ;Main12F.c: 102:         }
   724  00E7  28E9               	goto	l1265
   725  00E8                     l65:	
   726                           ;Main12F.c: 103:         else{
   727                           
   728                           
   729                           ;Main12F.c: 104:             GP1=0;
   730  00E8  1085               	bcf	5,1	;volatile
   731  00E9                     l1265:	
   732                           
   733                           ;Main12F.c: 106:         if(Temp==20){
   734  00E9  3014               	movlw	20
   735  00EA  0634               	xorwf	_Temp,w
   736  00EB  1D03               	btfss	3,2
   737  00EC  28EE               	goto	u1111
   738  00ED  28EF               	goto	u1110
   739  00EE                     u1111:	
   740  00EE  28F1               	goto	l67
   741  00EF                     u1110:	
   742  00EF                     l1267:	
   743                           
   744                           ;Main12F.c: 107:             GP2=1;
   745  00EF  1505               	bsf	5,2	;volatile
   746                           
   747                           ;Main12F.c: 108:         }
   748  00F0  283D               	goto	l55
   749  00F1                     l67:	
   750                           ;Main12F.c: 109:         else{
   751                           
   752                           
   753                           ;Main12F.c: 110:             GP2=0;
   754  00F1  1105               	bcf	5,2	;volatile
   755  00F2  283D               	goto	l55
   756  00F3  280B               	ljmp	start
   757  00F4                     __end_of_main:	
   758                           
   759                           	psect	text1
   760  0211                     __ptext1:	
   761 ;; *************** function ___awmod *****************
   762 ;; Defined at:
   763 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   764 ;; Parameters:    Size  Location     Type
   765 ;;  divisor         2    2[BANK0 ] int 
   766 ;;  dividend        2    4[BANK0 ] int 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  sign            1    8[BANK0 ] unsigned char 
   769 ;;  counter         1    7[BANK0 ] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  2    2[BANK0 ] int 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0
   779 ;;      Params:         0       4
   780 ;;      Locals:         0       2
   781 ;;      Temps:          0       1
   782 ;;      Totals:         0       7
   783 ;;Total ram usage:        7 bytes
   784 ;; Hardware stack levels used:    1
   785 ;; Hardware stack levels required when called:    1
   786 ;; This function calls:
   787 ;;		Nothing
   788 ;; This function is called by:
   789 ;;		_main
   790 ;; This function uses a non-reentrant model
   791 ;;
   792                           
   793                           
   794                           ;psect for function ___awmod
   795  0211                     ___awmod:	
   796  0211                     l1153:	
   797                           ;incstack = 0
   798                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   799                           
   800  0211  1283               	bcf	3,5	;RP0=0, select bank0
   801  0212  01A8               	clrf	___awmod@sign
   802  0213                     l1155:	
   803  0213  1FA5               	btfss	___awmod@dividend+1,7
   804  0214  2A16               	goto	u961
   805  0215  2A17               	goto	u960
   806  0216                     u961:	
   807  0216  2A1E               	goto	l1161
   808  0217                     u960:	
   809  0217                     l1157:	
   810  0217  09A4               	comf	___awmod@dividend,f
   811  0218  09A5               	comf	___awmod@dividend+1,f
   812  0219  0AA4               	incf	___awmod@dividend,f
   813  021A  1903               	skipnz
   814  021B  0AA5               	incf	___awmod@dividend+1,f
   815  021C                     l1159:	
   816  021C  01A8               	clrf	___awmod@sign
   817  021D  0AA8               	incf	___awmod@sign,f
   818  021E                     l1161:	
   819  021E  1FA3               	btfss	___awmod@divisor+1,7
   820  021F  2A21               	goto	u971
   821  0220  2A22               	goto	u970
   822  0221                     u971:	
   823  0221  2A27               	goto	l1165
   824  0222                     u970:	
   825  0222                     l1163:	
   826  0222  09A2               	comf	___awmod@divisor,f
   827  0223  09A3               	comf	___awmod@divisor+1,f
   828  0224  0AA2               	incf	___awmod@divisor,f
   829  0225  1903               	skipnz
   830  0226  0AA3               	incf	___awmod@divisor+1,f
   831  0227                     l1165:	
   832  0227  0822               	movf	___awmod@divisor,w
   833  0228  0423               	iorwf	___awmod@divisor+1,w
   834  0229  1903               	btfsc	3,2
   835  022A  2A2C               	goto	u981
   836  022B  2A2D               	goto	u980
   837  022C                     u981:	
   838  022C  2A5C               	goto	l1183
   839  022D                     u980:	
   840  022D                     l1167:	
   841  022D  01A7               	clrf	___awmod@counter
   842  022E  0AA7               	incf	___awmod@counter,f
   843  022F  2A3B               	goto	l1173
   844  0230                     l1169:	
   845  0230  3001               	movlw	1
   846  0231                     u995:	
   847  0231  1003               	clrc
   848  0232  0DA2               	rlf	___awmod@divisor,f
   849  0233  0DA3               	rlf	___awmod@divisor+1,f
   850  0234  3EFF               	addlw	-1
   851  0235  1D03               	skipz
   852  0236  2A31               	goto	u995
   853  0237                     l1171:	
   854  0237  3001               	movlw	1
   855  0238  00A6               	movwf	??___awmod
   856  0239  0826               	movf	??___awmod,w
   857  023A  07A7               	addwf	___awmod@counter,f
   858  023B                     l1173:	
   859  023B  1FA3               	btfss	___awmod@divisor+1,7
   860  023C  2A3E               	goto	u1001
   861  023D  2A3F               	goto	u1000
   862  023E                     u1001:	
   863  023E  2A30               	goto	l1169
   864  023F                     u1000:	
   865  023F                     l1175:	
   866  023F  0823               	movf	___awmod@divisor+1,w
   867  0240  0225               	subwf	___awmod@dividend+1,w
   868  0241  1D03               	skipz
   869  0242  2A45               	goto	u1015
   870  0243  0822               	movf	___awmod@divisor,w
   871  0244  0224               	subwf	___awmod@dividend,w
   872  0245                     u1015:	
   873  0245  1C03               	skipc
   874  0246  2A48               	goto	u1011
   875  0247  2A49               	goto	u1010
   876  0248                     u1011:	
   877  0248  2A4F               	goto	l1179
   878  0249                     u1010:	
   879  0249                     l1177:	
   880  0249  0822               	movf	___awmod@divisor,w
   881  024A  02A4               	subwf	___awmod@dividend,f
   882  024B  0823               	movf	___awmod@divisor+1,w
   883  024C  1C03               	skipc
   884  024D  03A5               	decf	___awmod@dividend+1,f
   885  024E  02A5               	subwf	___awmod@dividend+1,f
   886  024F                     l1179:	
   887  024F  3001               	movlw	1
   888  0250                     u1025:	
   889  0250  1003               	clrc
   890  0251  0CA3               	rrf	___awmod@divisor+1,f
   891  0252  0CA2               	rrf	___awmod@divisor,f
   892  0253  3EFF               	addlw	-1
   893  0254  1D03               	skipz
   894  0255  2A50               	goto	u1025
   895  0256                     l1181:	
   896  0256  3001               	movlw	1
   897  0257  02A7               	subwf	___awmod@counter,f
   898  0258  1D03               	btfss	3,2
   899  0259  2A5B               	goto	u1031
   900  025A  2A5C               	goto	u1030
   901  025B                     u1031:	
   902  025B  2A3F               	goto	l1175
   903  025C                     u1030:	
   904  025C                     l1183:	
   905  025C  0828               	movf	___awmod@sign,w
   906  025D  1903               	btfsc	3,2
   907  025E  2A60               	goto	u1041
   908  025F  2A61               	goto	u1040
   909  0260                     u1041:	
   910  0260  2A66               	goto	l1187
   911  0261                     u1040:	
   912  0261                     l1185:	
   913  0261  09A4               	comf	___awmod@dividend,f
   914  0262  09A5               	comf	___awmod@dividend+1,f
   915  0263  0AA4               	incf	___awmod@dividend,f
   916  0264  1903               	skipnz
   917  0265  0AA5               	incf	___awmod@dividend+1,f
   918  0266                     l1187:	
   919  0266  0825               	movf	___awmod@dividend+1,w
   920  0267  00A3               	movwf	?___awmod+1
   921  0268  0824               	movf	___awmod@dividend,w
   922  0269  00A2               	movwf	?___awmod
   923  026A                     l353:	
   924  026A  0008               	return
   925  026B                     __end_of___awmod:	
   926                           
   927                           	psect	text2
   928  01A9                     __ptext2:	
   929 ;; *************** function ___awdiv *****************
   930 ;; Defined at:
   931 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  divisor         2    2[BANK0 ] int 
   934 ;;  dividend        2    4[BANK0 ] int 
   935 ;; Auto vars:     Size  Location     Type
   936 ;;  quotient        2    9[BANK0 ] int 
   937 ;;  sign            1    8[BANK0 ] unsigned char 
   938 ;;  counter         1    7[BANK0 ] unsigned char 
   939 ;; Return value:  Size  Location     Type
   940 ;;                  2    2[BANK0 ] int 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0
   948 ;;      Params:         0       4
   949 ;;      Locals:         0       4
   950 ;;      Temps:          0       1
   951 ;;      Totals:         0       9
   952 ;;Total ram usage:        9 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    1
   955 ;; This function calls:
   956 ;;		Nothing
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function ___awdiv
   964  01A9                     ___awdiv:	
   965  01A9                     l1109:	
   966                           ;incstack = 0
   967                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   968                           
   969  01A9  1283               	bcf	3,5	;RP0=0, select bank0
   970  01AA  01A8               	clrf	___awdiv@sign
   971  01AB                     l1111:	
   972  01AB  1FA3               	btfss	___awdiv@divisor+1,7
   973  01AC  29AE               	goto	u861
   974  01AD  29AF               	goto	u860
   975  01AE                     u861:	
   976  01AE  29B6               	goto	l1117
   977  01AF                     u860:	
   978  01AF                     l1113:	
   979  01AF  09A2               	comf	___awdiv@divisor,f
   980  01B0  09A3               	comf	___awdiv@divisor+1,f
   981  01B1  0AA2               	incf	___awdiv@divisor,f
   982  01B2  1903               	skipnz
   983  01B3  0AA3               	incf	___awdiv@divisor+1,f
   984  01B4                     l1115:	
   985  01B4  01A8               	clrf	___awdiv@sign
   986  01B5  0AA8               	incf	___awdiv@sign,f
   987  01B6                     l1117:	
   988  01B6  1FA5               	btfss	___awdiv@dividend+1,7
   989  01B7  29B9               	goto	u871
   990  01B8  29BA               	goto	u870
   991  01B9                     u871:	
   992  01B9  29C3               	goto	l1123
   993  01BA                     u870:	
   994  01BA                     l1119:	
   995  01BA  09A4               	comf	___awdiv@dividend,f
   996  01BB  09A5               	comf	___awdiv@dividend+1,f
   997  01BC  0AA4               	incf	___awdiv@dividend,f
   998  01BD  1903               	skipnz
   999  01BE  0AA5               	incf	___awdiv@dividend+1,f
  1000  01BF                     l1121:	
  1001  01BF  3001               	movlw	1
  1002  01C0  00A6               	movwf	??___awdiv
  1003  01C1  0826               	movf	??___awdiv,w
  1004  01C2  06A8               	xorwf	___awdiv@sign,f
  1005  01C3                     l1123:	
  1006  01C3  01A9               	clrf	___awdiv@quotient
  1007  01C4  01AA               	clrf	___awdiv@quotient+1
  1008  01C5                     l1125:	
  1009  01C5  0822               	movf	___awdiv@divisor,w
  1010  01C6  0423               	iorwf	___awdiv@divisor+1,w
  1011  01C7  1903               	btfsc	3,2
  1012  01C8  29CA               	goto	u881
  1013  01C9  29CB               	goto	u880
  1014  01CA                     u881:	
  1015  01CA  2A02               	goto	l1145
  1016  01CB                     u880:	
  1017  01CB                     l1127:	
  1018  01CB  01A7               	clrf	___awdiv@counter
  1019  01CC  0AA7               	incf	___awdiv@counter,f
  1020  01CD  29D9               	goto	l1133
  1021  01CE                     l1129:	
  1022  01CE  3001               	movlw	1
  1023  01CF                     u895:	
  1024  01CF  1003               	clrc
  1025  01D0  0DA2               	rlf	___awdiv@divisor,f
  1026  01D1  0DA3               	rlf	___awdiv@divisor+1,f
  1027  01D2  3EFF               	addlw	-1
  1028  01D3  1D03               	skipz
  1029  01D4  29CF               	goto	u895
  1030  01D5                     l1131:	
  1031  01D5  3001               	movlw	1
  1032  01D6  00A6               	movwf	??___awdiv
  1033  01D7  0826               	movf	??___awdiv,w
  1034  01D8  07A7               	addwf	___awdiv@counter,f
  1035  01D9                     l1133:	
  1036  01D9  1FA3               	btfss	___awdiv@divisor+1,7
  1037  01DA  29DC               	goto	u901
  1038  01DB  29DD               	goto	u900
  1039  01DC                     u901:	
  1040  01DC  29CE               	goto	l1129
  1041  01DD                     u900:	
  1042  01DD                     l1135:	
  1043  01DD  3001               	movlw	1
  1044  01DE                     u915:	
  1045  01DE  1003               	clrc
  1046  01DF  0DA9               	rlf	___awdiv@quotient,f
  1047  01E0  0DAA               	rlf	___awdiv@quotient+1,f
  1048  01E1  3EFF               	addlw	-1
  1049  01E2  1D03               	skipz
  1050  01E3  29DE               	goto	u915
  1051  01E4  0823               	movf	___awdiv@divisor+1,w
  1052  01E5  0225               	subwf	___awdiv@dividend+1,w
  1053  01E6  1D03               	skipz
  1054  01E7  29EA               	goto	u925
  1055  01E8  0822               	movf	___awdiv@divisor,w
  1056  01E9  0224               	subwf	___awdiv@dividend,w
  1057  01EA                     u925:	
  1058  01EA  1C03               	skipc
  1059  01EB  29ED               	goto	u921
  1060  01EC  29EE               	goto	u920
  1061  01ED                     u921:	
  1062  01ED  29F5               	goto	l1141
  1063  01EE                     u920:	
  1064  01EE                     l1137:	
  1065  01EE  0822               	movf	___awdiv@divisor,w
  1066  01EF  02A4               	subwf	___awdiv@dividend,f
  1067  01F0  0823               	movf	___awdiv@divisor+1,w
  1068  01F1  1C03               	skipc
  1069  01F2  03A5               	decf	___awdiv@dividend+1,f
  1070  01F3  02A5               	subwf	___awdiv@dividend+1,f
  1071  01F4                     l1139:	
  1072  01F4  1429               	bsf	___awdiv@quotient,0
  1073  01F5                     l1141:	
  1074  01F5  3001               	movlw	1
  1075  01F6                     u935:	
  1076  01F6  1003               	clrc
  1077  01F7  0CA3               	rrf	___awdiv@divisor+1,f
  1078  01F8  0CA2               	rrf	___awdiv@divisor,f
  1079  01F9  3EFF               	addlw	-1
  1080  01FA  1D03               	skipz
  1081  01FB  29F6               	goto	u935
  1082  01FC                     l1143:	
  1083  01FC  3001               	movlw	1
  1084  01FD  02A7               	subwf	___awdiv@counter,f
  1085  01FE  1D03               	btfss	3,2
  1086  01FF  2A01               	goto	u941
  1087  0200  2A02               	goto	u940
  1088  0201                     u941:	
  1089  0201  29DD               	goto	l1135
  1090  0202                     u940:	
  1091  0202                     l1145:	
  1092  0202  0828               	movf	___awdiv@sign,w
  1093  0203  1903               	btfsc	3,2
  1094  0204  2A06               	goto	u951
  1095  0205  2A07               	goto	u950
  1096  0206                     u951:	
  1097  0206  2A0C               	goto	l1149
  1098  0207                     u950:	
  1099  0207                     l1147:	
  1100  0207  09A9               	comf	___awdiv@quotient,f
  1101  0208  09AA               	comf	___awdiv@quotient+1,f
  1102  0209  0AA9               	incf	___awdiv@quotient,f
  1103  020A  1903               	skipnz
  1104  020B  0AAA               	incf	___awdiv@quotient+1,f
  1105  020C                     l1149:	
  1106  020C  082A               	movf	___awdiv@quotient+1,w
  1107  020D  00A3               	movwf	?___awdiv+1
  1108  020E  0829               	movf	___awdiv@quotient,w
  1109  020F  00A2               	movwf	?___awdiv
  1110  0210                     l340:	
  1111  0210  0008               	return
  1112  0211                     __end_of___awdiv:	
  1113                           
  1114                           	psect	text3
  1115  00F4                     __ptext3:	
  1116 ;; *************** function _Transmitir *****************
  1117 ;; Defined at:
  1118 ;;		line 145 in file "Main12F.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;  BufferTx        1    wreg     unsigned char 
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  BufferTx        1   13[BANK0 ] unsigned char 
  1123 ;;  h               1   12[BANK0 ] unsigned char 
  1124 ;;  g               1   11[BANK0 ] unsigned char 
  1125 ;;  f               1   10[BANK0 ] unsigned char 
  1126 ;;  e               1    9[BANK0 ] unsigned char 
  1127 ;;  d               1    8[BANK0 ] unsigned char 
  1128 ;;  c               1    7[BANK0 ] unsigned char 
  1129 ;;  b               1    6[BANK0 ] unsigned char 
  1130 ;;  a               1    5[BANK0 ] unsigned char 
  1131 ;; Return value:  Size  Location     Type
  1132 ;;                  1    wreg      void 
  1133 ;; Registers used:
  1134 ;;		wreg, status,2, status,0, pclath, cstack
  1135 ;; Tracked objects:
  1136 ;;		On entry : 0/0
  1137 ;;		On exit  : 0/0
  1138 ;;		Unchanged: 0/0
  1139 ;; Data sizes:     COMMON   BANK0
  1140 ;;      Params:         0       0
  1141 ;;      Locals:         0       9
  1142 ;;      Temps:          0       2
  1143 ;;      Totals:         0      11
  1144 ;;Total ram usage:       11 bytes
  1145 ;; Hardware stack levels used:    1
  1146 ;; Hardware stack levels required when called:    2
  1147 ;; This function calls:
  1148 ;;		_Retardo
  1149 ;; This function is called by:
  1150 ;;		_main
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _Transmitir
  1156  00F4                     _Transmitir:	
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _Transmitir: [wreg+status,2+status,0+pclath+cstack]
  1160                           ;Transmitir@BufferTx stored from wreg
  1161  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1162  00F5  00AD               	movwf	Transmitir@BufferTx
  1163  00F6                     l1033:	
  1164                           
  1165                           ;Main12F.c: 146:     char a,b,c,d,e,f,g,h;;Main12F.c: 147:     a=BufferTx>>0;
  1166  00F6  082D               	movf	Transmitir@BufferTx,w
  1167  00F7  00A3               	movwf	??_Transmitir
  1168  00F8  0823               	movf	??_Transmitir,w
  1169  00F9  00A5               	movwf	Transmitir@a
  1170  00FA                     l1035:	
  1171                           
  1172                           ;Main12F.c: 148:     b=BufferTx>>1;
  1173  00FA  082D               	movf	Transmitir@BufferTx,w
  1174  00FB  00A3               	movwf	??_Transmitir
  1175  00FC  1003               	clrc
  1176  00FD  0C23               	rrf	??_Transmitir,w
  1177  00FE  00A4               	movwf	??_Transmitir+1
  1178  00FF  0824               	movf	??_Transmitir+1,w
  1179  0100  00A6               	movwf	Transmitir@b
  1180  0101                     l1037:	
  1181                           
  1182                           ;Main12F.c: 149:     c=BufferTx>>2;
  1183  0101  082D               	movf	Transmitir@BufferTx,w
  1184  0102  00A3               	movwf	??_Transmitir
  1185  0103  3002               	movlw	2
  1186  0104                     u645:	
  1187  0104  1003               	clrc
  1188  0105  0CA3               	rrf	??_Transmitir,f
  1189  0106  3EFF               	addlw	-1
  1190  0107  1D03               	skipz
  1191  0108  2904               	goto	u645
  1192  0109  0823               	movf	??_Transmitir,w
  1193  010A  00A4               	movwf	??_Transmitir+1
  1194  010B  0824               	movf	??_Transmitir+1,w
  1195  010C  00A7               	movwf	Transmitir@c
  1196  010D                     l1039:	
  1197                           
  1198                           ;Main12F.c: 150:     d=BufferTx>>3;
  1199  010D  082D               	movf	Transmitir@BufferTx,w
  1200  010E  00A3               	movwf	??_Transmitir
  1201  010F  3003               	movlw	3
  1202  0110                     u655:	
  1203  0110  1003               	clrc
  1204  0111  0CA3               	rrf	??_Transmitir,f
  1205  0112  3EFF               	addlw	-1
  1206  0113  1D03               	skipz
  1207  0114  2910               	goto	u655
  1208  0115  0823               	movf	??_Transmitir,w
  1209  0116  00A4               	movwf	??_Transmitir+1
  1210  0117  0824               	movf	??_Transmitir+1,w
  1211  0118  00A8               	movwf	Transmitir@d
  1212  0119                     l1041:	
  1213                           
  1214                           ;Main12F.c: 151:     e=BufferTx>>4;
  1215  0119  082D               	movf	Transmitir@BufferTx,w
  1216  011A  00A3               	movwf	??_Transmitir
  1217  011B  3004               	movlw	4
  1218  011C                     u665:	
  1219  011C  1003               	clrc
  1220  011D  0CA3               	rrf	??_Transmitir,f
  1221  011E  3EFF               	addlw	-1
  1222  011F  1D03               	skipz
  1223  0120  291C               	goto	u665
  1224  0121  0823               	movf	??_Transmitir,w
  1225  0122  00A4               	movwf	??_Transmitir+1
  1226  0123  0824               	movf	??_Transmitir+1,w
  1227  0124  00A9               	movwf	Transmitir@e
  1228  0125                     l1043:	
  1229                           
  1230                           ;Main12F.c: 152:     f=BufferTx>>5;
  1231  0125  082D               	movf	Transmitir@BufferTx,w
  1232  0126  00A3               	movwf	??_Transmitir
  1233  0127  3005               	movlw	5
  1234  0128                     u675:	
  1235  0128  1003               	clrc
  1236  0129  0CA3               	rrf	??_Transmitir,f
  1237  012A  3EFF               	addlw	-1
  1238  012B  1D03               	skipz
  1239  012C  2928               	goto	u675
  1240  012D  0823               	movf	??_Transmitir,w
  1241  012E  00A4               	movwf	??_Transmitir+1
  1242  012F  0824               	movf	??_Transmitir+1,w
  1243  0130  00AA               	movwf	Transmitir@f
  1244  0131                     l1045:	
  1245                           
  1246                           ;Main12F.c: 153:     g=BufferTx>>6;
  1247  0131  082D               	movf	Transmitir@BufferTx,w
  1248  0132  00A3               	movwf	??_Transmitir
  1249  0133  3006               	movlw	6
  1250  0134                     u685:	
  1251  0134  1003               	clrc
  1252  0135  0CA3               	rrf	??_Transmitir,f
  1253  0136  3EFF               	addlw	-1
  1254  0137  1D03               	skipz
  1255  0138  2934               	goto	u685
  1256  0139  0823               	movf	??_Transmitir,w
  1257  013A  00A4               	movwf	??_Transmitir+1
  1258  013B  0824               	movf	??_Transmitir+1,w
  1259  013C  00AB               	movwf	Transmitir@g
  1260  013D                     l1047:	
  1261                           
  1262                           ;Main12F.c: 154:     h=BufferTx>>7;
  1263  013D  082D               	movf	Transmitir@BufferTx,w
  1264  013E  00A3               	movwf	??_Transmitir
  1265  013F  3007               	movlw	7
  1266  0140                     u695:	
  1267  0140  1003               	clrc
  1268  0141  0CA3               	rrf	??_Transmitir,f
  1269  0142  3EFF               	addlw	-1
  1270  0143  1D03               	skipz
  1271  0144  2940               	goto	u695
  1272  0145  0823               	movf	??_Transmitir,w
  1273  0146  00A4               	movwf	??_Transmitir+1
  1274  0147  0824               	movf	??_Transmitir+1,w
  1275  0148  00AC               	movwf	Transmitir@h
  1276  0149                     l1049:	
  1277                           
  1278                           ;Main12F.c: 155:     TMR0=0;
  1279  0149  0181               	clrf	1	;volatile
  1280  014A                     l1051:	
  1281                           
  1282                           ;Main12F.c: 157:     GPIO4=0;
  1283  014A  1205               	bcf	5,4	;volatile
  1284  014B                     l1053:	
  1285                           
  1286                           ;Main12F.c: 158:     Retardo();
  1287  014B  22C9               	fcall	_Retardo
  1288  014C                     l1055:	
  1289                           
  1290                           ;Main12F.c: 166:     TMR0=0;
  1291  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1292  014D  0181               	clrf	1	;volatile
  1293  014E                     l1057:	
  1294                           
  1295                           ;Main12F.c: 167:     GPIO4=a;
  1296  014E  1825               	btfsc	Transmitir@a,0
  1297  014F  2951               	goto	u701
  1298  0150  2954               	goto	u700
  1299  0151                     u701:	
  1300  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1301  0152  1605               	bsf	5,4	;volatile
  1302  0153  2956               	goto	u714
  1303  0154                     u700:	
  1304  0154  1283               	bcf	3,5	;RP0=0, select bank0
  1305  0155  1205               	bcf	5,4	;volatile
  1306  0156                     u714:	
  1307  0156                     l1059:	
  1308                           
  1309                           ;Main12F.c: 168:     Retardo();
  1310  0156  22C9               	fcall	_Retardo
  1311  0157                     l1061:	
  1312                           
  1313                           ;Main12F.c: 170:     TMR0=0;
  1314  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1315  0158  0181               	clrf	1	;volatile
  1316  0159                     l1063:	
  1317                           
  1318                           ;Main12F.c: 171:     GPIO4=b;
  1319  0159  1826               	btfsc	Transmitir@b,0
  1320  015A  295C               	goto	u721
  1321  015B  295F               	goto	u720
  1322  015C                     u721:	
  1323  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1324  015D  1605               	bsf	5,4	;volatile
  1325  015E  2961               	goto	u734
  1326  015F                     u720:	
  1327  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0160  1205               	bcf	5,4	;volatile
  1329  0161                     u734:	
  1330  0161                     l1065:	
  1331                           
  1332                           ;Main12F.c: 172:     Retardo();
  1333  0161  22C9               	fcall	_Retardo
  1334  0162                     l1067:	
  1335                           
  1336                           ;Main12F.c: 174:     TMR0=0;
  1337  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1338  0163  0181               	clrf	1	;volatile
  1339  0164                     l1069:	
  1340                           
  1341                           ;Main12F.c: 175:     GPIO4=c;
  1342  0164  1827               	btfsc	Transmitir@c,0
  1343  0165  2967               	goto	u741
  1344  0166  296A               	goto	u740
  1345  0167                     u741:	
  1346  0167  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0168  1605               	bsf	5,4	;volatile
  1348  0169  296C               	goto	u754
  1349  016A                     u740:	
  1350  016A  1283               	bcf	3,5	;RP0=0, select bank0
  1351  016B  1205               	bcf	5,4	;volatile
  1352  016C                     u754:	
  1353  016C                     l1071:	
  1354                           
  1355                           ;Main12F.c: 176:     Retardo();
  1356  016C  22C9               	fcall	_Retardo
  1357  016D                     l1073:	
  1358                           
  1359                           ;Main12F.c: 178:     TMR0=0;
  1360  016D  1283               	bcf	3,5	;RP0=0, select bank0
  1361  016E  0181               	clrf	1	;volatile
  1362  016F                     l1075:	
  1363                           
  1364                           ;Main12F.c: 179:     GPIO4=d;
  1365  016F  1828               	btfsc	Transmitir@d,0
  1366  0170  2972               	goto	u761
  1367  0171  2975               	goto	u760
  1368  0172                     u761:	
  1369  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0173  1605               	bsf	5,4	;volatile
  1371  0174  2977               	goto	u774
  1372  0175                     u760:	
  1373  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0176  1205               	bcf	5,4	;volatile
  1375  0177                     u774:	
  1376  0177                     l1077:	
  1377                           
  1378                           ;Main12F.c: 180:     Retardo();
  1379  0177  22C9               	fcall	_Retardo
  1380  0178                     l1079:	
  1381                           
  1382                           ;Main12F.c: 182:     TMR0=0;
  1383  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0179  0181               	clrf	1	;volatile
  1385  017A                     l1081:	
  1386                           
  1387                           ;Main12F.c: 183:     GPIO4=e;
  1388  017A  1829               	btfsc	Transmitir@e,0
  1389  017B  297D               	goto	u781
  1390  017C  2980               	goto	u780
  1391  017D                     u781:	
  1392  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1393  017E  1605               	bsf	5,4	;volatile
  1394  017F  2982               	goto	u794
  1395  0180                     u780:	
  1396  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1397  0181  1205               	bcf	5,4	;volatile
  1398  0182                     u794:	
  1399  0182                     l1083:	
  1400                           
  1401                           ;Main12F.c: 184:     Retardo();
  1402  0182  22C9               	fcall	_Retardo
  1403  0183                     l1085:	
  1404                           
  1405                           ;Main12F.c: 186:     TMR0=0;
  1406  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0184  0181               	clrf	1	;volatile
  1408  0185                     l1087:	
  1409                           
  1410                           ;Main12F.c: 187:     GPIO4=f;
  1411  0185  182A               	btfsc	Transmitir@f,0
  1412  0186  2988               	goto	u801
  1413  0187  298B               	goto	u800
  1414  0188                     u801:	
  1415  0188  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0189  1605               	bsf	5,4	;volatile
  1417  018A  298D               	goto	u814
  1418  018B                     u800:	
  1419  018B  1283               	bcf	3,5	;RP0=0, select bank0
  1420  018C  1205               	bcf	5,4	;volatile
  1421  018D                     u814:	
  1422  018D                     l1089:	
  1423                           
  1424                           ;Main12F.c: 188:     Retardo();
  1425  018D  22C9               	fcall	_Retardo
  1426  018E                     l1091:	
  1427                           
  1428                           ;Main12F.c: 190:     TMR0=0;
  1429  018E  1283               	bcf	3,5	;RP0=0, select bank0
  1430  018F  0181               	clrf	1	;volatile
  1431  0190                     l1093:	
  1432                           
  1433                           ;Main12F.c: 191:     GPIO4=g;
  1434  0190  182B               	btfsc	Transmitir@g,0
  1435  0191  2993               	goto	u821
  1436  0192  2996               	goto	u820
  1437  0193                     u821:	
  1438  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0194  1605               	bsf	5,4	;volatile
  1440  0195  2998               	goto	u834
  1441  0196                     u820:	
  1442  0196  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0197  1205               	bcf	5,4	;volatile
  1444  0198                     u834:	
  1445  0198                     l1095:	
  1446                           
  1447                           ;Main12F.c: 192:     Retardo();
  1448  0198  22C9               	fcall	_Retardo
  1449  0199                     l1097:	
  1450                           
  1451                           ;Main12F.c: 194:     TMR0=0;
  1452  0199  1283               	bcf	3,5	;RP0=0, select bank0
  1453  019A  0181               	clrf	1	;volatile
  1454  019B                     l1099:	
  1455                           
  1456                           ;Main12F.c: 195:     GPIO4=h;
  1457  019B  182C               	btfsc	Transmitir@h,0
  1458  019C  299E               	goto	u841
  1459  019D  29A1               	goto	u840
  1460  019E                     u841:	
  1461  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1462  019F  1605               	bsf	5,4	;volatile
  1463  01A0  29A3               	goto	u854
  1464  01A1                     u840:	
  1465  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  1466  01A2  1205               	bcf	5,4	;volatile
  1467  01A3                     u854:	
  1468  01A3                     l1101:	
  1469                           
  1470                           ;Main12F.c: 196:     Retardo();
  1471  01A3  22C9               	fcall	_Retardo
  1472  01A4                     l1103:	
  1473                           
  1474                           ;Main12F.c: 198:     TMR0=0;
  1475  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1476  01A5  0181               	clrf	1	;volatile
  1477  01A6                     l1105:	
  1478                           
  1479                           ;Main12F.c: 199:     GPIO4=1;
  1480  01A6  1605               	bsf	5,4	;volatile
  1481  01A7                     l1107:	
  1482                           
  1483                           ;Main12F.c: 200:     Retardo();
  1484  01A7  22C9               	fcall	_Retardo
  1485  01A8                     l92:	
  1486  01A8  0008               	return
  1487  01A9                     __end_of_Transmitir:	
  1488                           
  1489                           	psect	text4
  1490  02C9                     __ptext4:	
  1491 ;; *************** function _Retardo *****************
  1492 ;; Defined at:
  1493 ;;		line 202 in file "Main12F.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMMON   BANK0
  1507 ;;      Params:         0       0
  1508 ;;      Locals:         0       0
  1509 ;;      Temps:          0       1
  1510 ;;      Totals:         0       1
  1511 ;;Total ram usage:        1 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    1
  1514 ;; This function calls:
  1515 ;;		Nothing
  1516 ;; This function is called by:
  1517 ;;		_Transmitir
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           
  1522                           ;psect for function _Retardo
  1523  02C9                     _Retardo:	
  1524  02C9                     l1013:	
  1525                           ;incstack = 0
  1526                           ; Regs used in _Retardo: [wreg]
  1527                           
  1528                           
  1529                           ;Main12F.c: 203:     _delay((unsigned long)((108)*(4000000/4000000.0)));
  1530  02C9  3023               	movlw	35
  1531  02CA  1283               	bcf	3,5	;RP0=0, select bank0
  1532  02CB  00A2               	movwf	??_Retardo
  1533  02CC                     u1177:	
  1534  02CC  0BA2               	decfsz	??_Retardo,f
  1535  02CD  2ACC               	goto	u1177
  1536  02CE  2ACF               	nop2
  1537  02CF                     l95:	
  1538  02CF  0008               	return
  1539  02D0                     __end_of_Retardo:	
  1540                           
  1541                           	psect	text5
  1542  02A0                     __ptext5:	
  1543 ;; *************** function _LeerByte *****************
  1544 ;; Defined at:
  1545 ;;		line 115 in file "Main12F.c"
  1546 ;; Parameters:    Size  Location     Type
  1547 ;;		None
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  i               1    8[BANK0 ] unsigned char 
  1550 ;;  res             1    7[BANK0 ] unsigned char 
  1551 ;; Return value:  Size  Location     Type
  1552 ;;                  1    wreg      unsigned char 
  1553 ;; Registers used:
  1554 ;;		wreg, status,2, status,0, pclath, cstack
  1555 ;; Tracked objects:
  1556 ;;		On entry : 0/0
  1557 ;;		On exit  : 0/0
  1558 ;;		Unchanged: 0/0
  1559 ;; Data sizes:     COMMON   BANK0
  1560 ;;      Params:         0       0
  1561 ;;      Locals:         0       2
  1562 ;;      Temps:          0       3
  1563 ;;      Totals:         0       5
  1564 ;;Total ram usage:        5 bytes
  1565 ;; Hardware stack levels used:    1
  1566 ;; Hardware stack levels required when called:    2
  1567 ;; This function calls:
  1568 ;;		_LeerBit
  1569 ;; This function is called by:
  1570 ;;		_main
  1571 ;; This function uses a non-reentrant model
  1572 ;;
  1573                           
  1574                           
  1575                           ;psect for function _LeerByte
  1576  02A0                     _LeerByte:	
  1577  02A0                     l1015:	
  1578                           ;incstack = 0
  1579                           ; Regs used in _LeerByte: [wreg+status,2+status,0+pclath+cstack]
  1580                           
  1581                           
  1582                           ;Main12F.c: 116:   unsigned char res=0,i;
  1583  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1584  02A1  01A7               	clrf	LeerByte@res
  1585  02A2                     l1017:	
  1586                           
  1587                           ;Main12F.c: 118:   for(i=8;i>0;i--){
  1588  02A2  3008               	movlw	8
  1589  02A3  00A4               	movwf	??_LeerByte
  1590  02A4  0824               	movf	??_LeerByte,w
  1591  02A5  00A8               	movwf	LeerByte@i
  1592  02A6                     l1023:	
  1593                           
  1594                           ;Main12F.c: 119:     res=(res<<1) | LeerBit();
  1595  02A6  226B               	fcall	_LeerBit
  1596  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1597  02A8  00A4               	movwf	??_LeerByte
  1598  02A9  0827               	movf	LeerByte@res,w
  1599  02AA  00A5               	movwf	??_LeerByte+1
  1600  02AB  0725               	addwf	??_LeerByte+1,w
  1601  02AC  0424               	iorwf	??_LeerByte,w
  1602  02AD  00A6               	movwf	??_LeerByte+2
  1603  02AE  0826               	movf	??_LeerByte+2,w
  1604  02AF  00A7               	movwf	LeerByte@res
  1605  02B0                     l1025:	
  1606                           
  1607                           ;Main12F.c: 120:   }
  1608  02B0  3001               	movlw	1
  1609  02B1  02A8               	subwf	LeerByte@i,f
  1610  02B2                     l1027:	
  1611  02B2  0828               	movf	LeerByte@i,w
  1612  02B3  1D03               	btfss	3,2
  1613  02B4  2AB6               	goto	u631
  1614  02B5  2AB7               	goto	u630
  1615  02B6                     u631:	
  1616  02B6  2AA6               	goto	l1023
  1617  02B7                     u630:	
  1618  02B7                     l1029:	
  1619                           
  1620                           ;Main12F.c: 121:   return res;
  1621  02B7  0827               	movf	LeerByte@res,w
  1622  02B8                     l76:	
  1623  02B8  0008               	return
  1624  02B9                     __end_of_LeerByte:	
  1625                           
  1626                           	psect	text6
  1627  026B                     __ptext6:	
  1628 ;; *************** function _LeerBit *****************
  1629 ;; Defined at:
  1630 ;;		line 123 in file "Main12F.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;		None
  1633 ;; Auto vars:     Size  Location     Type
  1634 ;;  res             1    3[BANK0 ] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      unsigned char 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0
  1644 ;;      Params:         0       0
  1645 ;;      Locals:         0       1
  1646 ;;      Temps:          0       1
  1647 ;;      Totals:         0       2
  1648 ;;Total ram usage:        2 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    1
  1651 ;; This function calls:
  1652 ;;		Nothing
  1653 ;; This function is called by:
  1654 ;;		_LeerByte
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _LeerBit
  1660  026B                     _LeerBit:	
  1661  026B                     l985:	
  1662                           ;incstack = 0
  1663                           ; Regs used in _LeerBit: [wreg+status,2+status,0]
  1664                           
  1665                           
  1666                           ;Main12F.c: 124:     unsigned char res=0;
  1667  026B  1283               	bcf	3,5	;RP0=0, select bank0
  1668  026C  01A3               	clrf	LeerBit@res
  1669                           
  1670                           ;Main12F.c: 125:     TMR0=0;
  1671  026D  0181               	clrf	1	;volatile
  1672                           
  1673                           ;Main12F.c: 126:     while(GPIO5==0){
  1674  026E  2A76               	goto	l79
  1675  026F                     l987:	
  1676                           
  1677                           ;Main12F.c: 127:         if(bandera==1)break;
  1678  026F  0331               	decf	_bandera,w
  1679  0270  1D03               	btfss	3,2
  1680  0271  2A73               	goto	u571
  1681  0272  2A74               	goto	u570
  1682  0273                     u571:	
  1683  0273  2A75               	goto	l81
  1684  0274                     u570:	
  1685  0274  2A7A               	goto	l991
  1686  0275                     l81:	
  1687                           
  1688                           ;Main12F.c: 128:         GP1=1;
  1689  0275  1485               	bsf	5,1	;volatile
  1690  0276                     l79:	
  1691                           ;Main12F.c: 129:      }
  1692                           
  1693                           
  1694                           ;Main12F.c: 126:     while(GPIO5==0){
  1695  0276  1E85               	btfss	5,5	;volatile
  1696  0277  2A79               	goto	u581
  1697  0278  2A7A               	goto	u580
  1698  0279                     u581:	
  1699  0279  2A6F               	goto	l987
  1700  027A                     u580:	
  1701  027A                     l991:	
  1702                           
  1703                           ;Main12F.c: 130:      _delay((unsigned long)((13)*(4000000/4000000.0)));
  1704  027A  3004               	movlw	4
  1705  027B  00A2               	movwf	??_LeerBit
  1706  027C                     u1187:	
  1707  027C  0BA2               	decfsz	??_LeerBit,f
  1708  027D  2A7C               	goto	u1187
  1709  027E                     l993:	
  1710                           
  1711                           ;Main12F.c: 131:      if(GPIO5==1) res=0;
  1712  027E  1283               	bcf	3,5	;RP0=0, select bank0
  1713  027F  1E85               	btfss	5,5	;volatile
  1714  0280  2A82               	goto	u591
  1715  0281  2A83               	goto	u590
  1716  0282                     u591:	
  1717  0282  2A84               	goto	l997
  1718  0283                     u590:	
  1719  0283                     l995:	
  1720  0283  01A3               	clrf	LeerBit@res
  1721  0284                     l997:	
  1722                           
  1723                           ;Main12F.c: 132:      _delay((unsigned long)((22)*(4000000/4000000.0)));
  1724  0284  3007               	movlw	7
  1725  0285  00A2               	movwf	??_LeerBit
  1726  0286                     u1197:	
  1727  0286  0BA2               	decfsz	??_LeerBit,f
  1728  0287  2A86               	goto	u1197
  1729  0288                     l999:	
  1730                           
  1731                           ;Main12F.c: 133:      if(GPIO5==1){
  1732  0288  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0289  1E85               	btfss	5,5	;volatile
  1734  028A  2A8C               	goto	u601
  1735  028B  2A8D               	goto	u600
  1736  028C                     u601:	
  1737  028C  2A9C               	goto	l84
  1738  028D                     u600:	
  1739  028D                     l1001:	
  1740                           
  1741                           ;Main12F.c: 134:        res=1;
  1742  028D  01A3               	clrf	LeerBit@res
  1743  028E  0AA3               	incf	LeerBit@res,f
  1744  028F                     l1003:	
  1745                           
  1746                           ;Main12F.c: 135:        TMR0=0;
  1747  028F  0181               	clrf	1	;volatile
  1748                           
  1749                           ;Main12F.c: 136:        while(GPIO5==1){
  1750  0290  2A98               	goto	l85
  1751  0291                     l1005:	
  1752                           
  1753                           ;Main12F.c: 137:            if(bandera==1)break;
  1754  0291  0331               	decf	_bandera,w
  1755  0292  1D03               	btfss	3,2
  1756  0293  2A95               	goto	u611
  1757  0294  2A96               	goto	u610
  1758  0295                     u611:	
  1759  0295  2A97               	goto	l87
  1760  0296                     u610:	
  1761  0296  2A9C               	goto	l84
  1762  0297                     l87:	
  1763                           
  1764                           ;Main12F.c: 138:            GP2=1;
  1765  0297  1505               	bsf	5,2	;volatile
  1766  0298                     l85:	
  1767                           ;Main12F.c: 139:        }
  1768                           
  1769                           
  1770                           ;Main12F.c: 136:        while(GPIO5==1){
  1771  0298  1A85               	btfsc	5,5	;volatile
  1772  0299  2A9B               	goto	u621
  1773  029A  2A9C               	goto	u620
  1774  029B                     u621:	
  1775  029B  2A91               	goto	l1005
  1776  029C                     u620:	
  1777  029C                     l84:	
  1778                           ;Main12F.c: 140:      }
  1779                           
  1780                           
  1781                           ;Main12F.c: 141:      GP1=0;
  1782  029C  1085               	bcf	5,1	;volatile
  1783                           
  1784                           ;Main12F.c: 142:      GP2=0;
  1785  029D  1105               	bcf	5,2	;volatile
  1786  029E                     l1009:	
  1787                           
  1788                           ;Main12F.c: 143:      return res;
  1789  029E  0823               	movf	LeerBit@res,w
  1790  029F                     l89:	
  1791  029F  0008               	return
  1792  02A0                     __end_of_LeerBit:	
  1793                           
  1794                           	psect	text7
  1795  02B9                     __ptext7:	
  1796 ;; *************** function _ISR *****************
  1797 ;; Defined at:
  1798 ;;		line 205 in file "Main12F.c"
  1799 ;; Parameters:    Size  Location     Type
  1800 ;;		None
  1801 ;; Auto vars:     Size  Location     Type
  1802 ;;		None
  1803 ;; Return value:  Size  Location     Type
  1804 ;;                  1    wreg      void 
  1805 ;; Registers used:
  1806 ;;		wreg
  1807 ;; Tracked objects:
  1808 ;;		On entry : 0/0
  1809 ;;		On exit  : 0/0
  1810 ;;		Unchanged: 0/0
  1811 ;; Data sizes:     COMMON   BANK0
  1812 ;;      Params:         0       0
  1813 ;;      Locals:         0       0
  1814 ;;      Temps:          0       2
  1815 ;;      Totals:         0       2
  1816 ;;Total ram usage:        2 bytes
  1817 ;; Hardware stack levels used:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		Interrupt level 1
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _ISR
  1827  02B9                     _ISR:	
  1828  02B9                     i1l1269:	
  1829                           
  1830                           ;Main12F.c: 206:     if(T0IF==1){
  1831  02B9  1D0B               	btfss	11,2	;volatile
  1832  02BA  2ABC               	goto	u112_21
  1833  02BB  2ABD               	goto	u112_20
  1834  02BC                     u112_21:	
  1835  02BC  2AC2               	goto	i1l101
  1836  02BD                     u112_20:	
  1837  02BD                     i1l1271:	
  1838                           
  1839                           ;Main12F.c: 207:             T0IF=0;
  1840  02BD  110B               	bcf	11,2	;volatile
  1841  02BE                     i1l1273:	
  1842                           
  1843                           ;Main12F.c: 208:             GPIO0=GPIO0^ 1;
  1844  02BE  3001               	movlw	1
  1845  02BF  0685               	xorwf	5,f
  1846  02C0                     i1l1275:	
  1847                           
  1848                           ;Main12F.c: 209:             bandera=1;
  1849  02C0  01B1               	clrf	_bandera
  1850  02C1  0AB1               	incf	_bandera,f
  1851  02C2                     i1l101:	
  1852  02C2  0821               	movf	??_ISR+1,w
  1853  02C3  008A               	movwf	10
  1854  02C4  0E20               	swapf	??_ISR^0,w
  1855  02C5  0083               	movwf	3
  1856  02C6  0EDE               	swapf	btemp,f
  1857  02C7  0E5E               	swapf	btemp,w
  1858  02C8  0009               	retfie
  1859  02C9                     __end_of_ISR:	
  1860  005E                     btemp	set	94	;btemp
  1861  005E                     wtemp0	set	94
  1862                           
  1863                           	psect	intentry
  1864  0004                     __pintentry:	
  1865                           ;incstack = 0
  1866                           ; Regs used in _ISR: [wreg]
  1867                           
  1868  0004                     interrupt_function:	
  1869  005E                     saved_w	set	btemp
  1870  0004  00DE               	movwf	btemp
  1871  0005  0E03               	swapf	3,w
  1872  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1873  0007  00A0               	movwf	??_ISR
  1874  0008  080A               	movf	10,w
  1875  0009  00A1               	movwf	??_ISR+1
  1876  000A  2AB9               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     17      21

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_Transmitir
    _Transmitir->_Retardo
    _LeerByte->_LeerBit

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1681
                                             14 BANK0      3     3      0
                           _LeerByte
                         _Transmitir
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              2 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              2 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                          11    11      0     360
                                              3 BANK0     11    11      0
                            _Retardo
 ---------------------------------------------------------------------------------
 (2) _Retardo                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerByte                                             5     5      0     117
                                              4 BANK0      5     5      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (2) _LeerBit                                              2     2      0      25
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LeerByte
     _LeerBit
   _Transmitir
     _Retardo
   ___awdiv
   ___awmod

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E     11      15       4       33.9%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      15       6        0.0%
ABS                  0      0      15       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 04 15:51:01 2022

            __CFG_CP$OFF 0000                       l60 0075                       l55 003D  
                     l56 0063                       l81 0275                       l65 00E8  
                     l67 00F1                       l84 029C                       l76 02B8  
                     l92 01A8                       l85 0298                       l87 0297  
                     l79 0276                       l95 02CF                       l89 029F  
           ___awdiv@sign 0028       Transmitir@BufferTx 002D                      l340 0210  
                    l353 026A                      _GP1 0029                      _GP2 002A  
                    l991 027A                      l993 027E                      l985 026B  
                    l995 0283                      l987 026F                      _GIE 005F  
                    l997 0284                      l999 0288                      u600 028D  
                    u601 028C                      u610 0296             __CFG_CPD$OFF 0000  
                    u611 0295                      u620 029C                      u700 0154  
                    _ISR 02B9                      u621 029B                      u701 0151  
                    u630 02B7                      u631 02B6                      u800 018B  
                    u720 015F                      u801 0188                      u721 015C  
                    u570 0274                      u714 0156                      u571 0273  
                    u580 027A                      u820 0196                      u740 016A  
                    u900 01DD                      u581 0279                      u821 0193  
                    u741 0167                      u645 0104                      u901 01DC  
                    u590 0283                      u814 018D                      u734 0161  
                    u591 0282                      u655 0110                      u840 01A1  
                    u760 0175                      u920 01EE                      u841 019E  
                    u761 0172                      u665 011C                      u921 01ED  
                    u834 0198                      u754 016C                      u675 0128  
                    u915 01DE                      u780 0180                      u940 0202  
                    u860 01AF                      u781 017D                      u685 0134  
                    u941 0201                      u925 01EA                      u861 01AE  
                    u854 01A3                      u774 0177                      u950 0207  
                    u870 01BA                      u695 0140                      u951 0206  
                    u935 01F6                      u871 01B9                      u880 01CB  
                    u960 0217                      u881 01CA                      u961 0216  
                    u794 0182                      u970 0222                      u971 0221  
                    u980 022D                      u981 022C                      u895 01CF  
                    u995 0231                      _Che 0032                      _WPU 0095  
                    _Hum 0033             ___awmod@sign 0028                     ?_ISR 0020  
                   l1001 028D                     l1003 028F                     l1005 0291  
                   l1013 02C9                     l1101 01A3                     l1023 02A6  
                   l1015 02A0                     l1103 01A4                     l1111 01AB  
                   l1009 029E                     l1025 02B0                     l1017 02A2  
                   l1105 01A6                     l1041 0119                     l1033 00F6  
                   l1121 01BF                     l1113 01AF                     l1201 0023  
                   l1027 02B2                     l1107 01A7                     l1051 014A  
                   l1043 0125                     l1035 00FA                     l1131 01D5  
                   l1123 01C3                     l1115 01B4                     l1211 002B  
                   l1203 0026                     l1029 02B7                     l1061 0157  
                   l1053 014B                     l1045 0131                     l1037 0101  
                   l1141 01F5                     l1133 01D9                     l1125 01C5  
                   l1117 01B6                     l1109 01A9                     l1221 0050  
                   l1213 003B                     l1205 0027                     l1071 016C  
                   l1063 0159                     l1055 014C                     l1047 013D  
                   l1039 010D                     l1143 01FC                     l1135 01DD  
                   l1127 01CB                     l1119 01BA                     l1231 006C  
                   l1223 0058                     l1215 004A                     l1207 0029  
                   l1081 017A                     l1073 016D                     l1065 0161  
                   l1057 014E                     l1049 0149                     l1137 01EE  
                   l1129 01CE                     l1145 0202                     l1161 021E  
                   l1153 0211                     l1241 008F                     l1233 006F  
                   l1225 005D                     l1217 004C                     l1209 002A  
                   l1091 018E                     l1083 0182                     l1075 016F  
                   l1067 0162                     l1059 0156                     l1147 0207  
                   l1139 01F4                     l1171 0237                     l1163 0222  
                   l1155 0213                     l1251 00B8                     l1243 0092  
                   l1219 004E                     l1093 0190                     l1085 0183  
                   l1077 0177                     l1069 0164                     l1149 020C  
                   l1181 0256                     l1173 023B                     l1165 0227  
                   l1157 0217                     l1261 00E0                     l1253 00BA  
                   l1245 0094                     l1237 0079                     l1229 0067  
                   l1095 0198                     l1087 0185                     l1079 0178  
                   l1175 023F                     l1167 022D                     l1183 025C  
                   l1159 021C                     l1263 00E6                     l1255 00CB  
                   l1247 00A5                     l1239 008A                     l1191 0014  
                   l1097 0199                     l1089 018D                     l1185 0261  
                   l1177 0249                     l1169 0230                     l1265 00E9  
                   l1257 00DC                     l1249 00B6                     l1193 0016  
                   l1099 019B                     l1187 0266                     l1179 024F  
                   l1267 00EF                     l1259 00DE                     l1195 0019  
                   l1197 0020                     l1199 0022                     _T0IE 005D  
                   u1000 023F                     _T0IF 005A                     u1001 023E  
                   u1010 0249                     u1011 0248                     u1100 00E6  
                   u1101 00E5                     u1030 025C                     u1110 00EF  
                   u1031 025B                     u1015 0245                     u1111 00EE  
                   u1040 0261                     u1041 0260                     u1025 0250  
                   u1050 0062                     u1051 0061                     u1060 0067  
                   u1061 0066                     u1070 0074                     u1071 0073  
                   u1080 0079                     u1081 0078                     u1137 0034  
                   u1090 008F                     u1091 008E                     u1147 0043  
                   u1157 0054                     u1167 0069                     u1177 02CC  
                   u1187 027C                     u1197 0286                     _GPIO 0005  
                   _TMR0 0001                     _Temp 0034                     _main 0014  
                   btemp 005E            __CFG_BOREN$ON 0000                     start 000B  
          __CFG_MCLRE$ON 0000          __end_of_LeerBit 02A0                    ??_ISR 0020  
        __end_of_Retardo 02D0                    ?_main 0020          __end_of___awdiv 0211  
          __CFG_WDTE$OFF 0000          __end_of___awmod 026B                    _CMCON 0019  
                  _ANSEL 009F          ___awdiv@divisor 0022                    _GPIO0 0028  
                  _GPIO4 002C                    _GPIO5 002D                    i1l101 02C2  
        ___awdiv@counter 0027                    pclath 000A                    status 0003  
                  wtemp0 005E          __initialization 000C         __end_of_LeerByte 02B9  
           __end_of_main 00F4                   ??_main 002E         ___awdiv@dividend 0024  
                 i1l1271 02BD                   u112_20 02BD                   i1l1273 02BE  
                 u112_21 02BC                   i1l1275 02C0                   i1l1269 02B9  
                 _TRISIO 0085                ??_LeerBit 0022           __CFG_PWRTE$OFF 0000  
              ??_Retardo 0022                ??___awdiv 0026                ??___awmod 0026  
       ___awdiv@quotient 0029          ___awmod@divisor 0022          ___awmod@counter 0027  
                 saved_w 005E               _Transmitir 00F4  __end_of__initialization 0012  
           __pidataBANK0 02D0                ?_LeerByte 0020               __pbssBANK0 0031  
             __pmaintext 0014               __pintentry 0004                  _TRISIO5 042D  
            ?_Transmitir 0020               ??_LeerByte 0024                  _LeerBit 026B  
                _Retardo 02C9                  ___awdiv 01A9                  ___awmod 0211  
                _bandera 0031                  __ptext1 0211                  __ptext2 01A9  
                __ptext3 00F4                  __ptext4 02C9                  __ptext5 02A0  
                __ptext6 026B                  __ptext7 02B9             __size_of_ISR 0010  
       ___awmod@dividend 0024     end_of_initialization 0012      __size_of_Transmitir 00B5  
              LeerByte@i 0028              Transmitir@a 0025              Transmitir@b 0026  
            Transmitir@c 0027              Transmitir@d 0028              Transmitir@e 0029  
            Transmitir@f 002A              Transmitir@g 002B              Transmitir@h 002C  
    start_initialization 000C              __end_of_ISR 02C9        __size_of_LeerByte 0019  
            __pdataBANK0 0033                ___latbits 0000            __pcstackBANK0 0020  
           ??_Transmitir 0023                 ?_LeerBit 0020                 ?_Retardo 0020  
               ?___awdiv 0022                 ?___awmod 0022       __end_of_Transmitir 01A9  
      interrupt_function 0004                 _LeerByte 02A0         __size_of_LeerBit 0035  
       __size_of_Retardo 0007         __size_of___awdiv 0068         __size_of___awmod 005A  
          __size_of_main 00E0                 intlevel1 0000               _OPTION_REG 0081  
      __CFG_FOSC$INTRCIO 0000               LeerBit@res 0023              LeerByte@res 0027  
