

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Sep 04 14:15:58 2022

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	12F675
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	dabs	1,0x5E,2
    18  0000                     
    19                           ; Version 2.10
    20                           ; Generated 31/07/2019 GMT
    21                           ; 
    22                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC12F675 Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0019                     	;# 
    67  001E                     	;# 
    68  001F                     	;# 
    69  0081                     	;# 
    70  0085                     	;# 
    71  008C                     	;# 
    72  008E                     	;# 
    73  0090                     	;# 
    74  0095                     	;# 
    75  0096                     	;# 
    76  0096                     	;# 
    77  0099                     	;# 
    78  009A                     	;# 
    79  009A                     	;# 
    80  009B                     	;# 
    81  009C                     	;# 
    82  009D                     	;# 
    83  009E                     	;# 
    84  009F                     	;# 
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  000A                     	;# 
    92  000B                     	;# 
    93  000C                     	;# 
    94  000E                     	;# 
    95  000E                     	;# 
    96  000F                     	;# 
    97  0010                     	;# 
    98  0019                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  008C                     	;# 
   104  008E                     	;# 
   105  0090                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0096                     	;# 
   109  0099                     	;# 
   110  009A                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117                           
   118                           	psect	idataBANK0
   119  0108                     __pidataBANK0:	
   120                           
   121                           ;initializer for _Hum
   122  0108  3414               	retlw	20
   123                           
   124                           ;initializer for _Temp
   125  0109  340A               	retlw	10
   126  0001                     _TMR0	set	1
   127  0005                     _GPIO	set	5
   128  0019                     _CMCON	set	25
   129  0028                     _GPIO0	set	40
   130  002A                     _GP2	set	42
   131  002D                     _GPIO5	set	45
   132  005F                     _GIE	set	95
   133  005D                     _T0IE	set	93
   134  005A                     _T0IF	set	90
   135  002C                     _GPIO4	set	44
   136  0029                     _GP1	set	41
   137  0081                     _OPTION_REG	set	129
   138  0095                     _WPU	set	149
   139  0085                     _TRISIO	set	133
   140  009F                     _ANSEL	set	159
   141  042D                     _TRISIO5	set	1069
   142                           
   143                           ; #config settings
   144  0000                     
   145                           	psect	cinit
   146  000C                     start_initialization:	
   147  000C                     __initialization:	
   148                           
   149                           ; Initialize objects allocated to BANK0
   150  000C  2108               	fcall	__pidataBANK0	;fetch initializer
   151  000D  00AE               	movwf	__pdataBANK0& (0+127)
   152  000E  2109               	fcall	__pidataBANK0+1	;fetch initializer
   153  000F  00AF               	movwf	(__pdataBANK0+1)& (0+127)
   154                           
   155                           ; Clear objects allocated to BANK0
   156  0010  01AC               	clrf	__pbssBANK0& (0+127)
   157  0011  01AD               	clrf	(__pbssBANK0+1)& (0+127)
   158  0012                     end_of_initialization:	
   159                           ;End of C runtime variable initialization code
   160                           
   161  0012                     __end_of__initialization:	
   162  0012  0183               	clrf	3
   163  0013  2814               	ljmp	_main	;jump to C main() function
   164                           
   165                           	psect	bssBANK0
   166  002C                     __pbssBANK0:	
   167  002C                     _bandera:	
   168  002C                     	ds	1
   169  002D                     _Che:	
   170  002D                     	ds	1
   171                           
   172                           	psect	dataBANK0
   173  002E                     __pdataBANK0:	
   174  002E                     _Hum:	
   175  002E                     	ds	1
   176  002F                     _Temp:	
   177  002F                     	ds	1
   178                           
   179                           	psect	cstackCOMMON
   180  0000                     __pcstackCOMMON:	
   181  0000                     ??_Transmitir:	
   182                           
   183                           	psect	cstackBANK0
   184  0020                     __pcstackBANK0:	
   185                           ; 1 bytes @ 0x0
   186                           
   187  0020                     ?_LeerByte:	
   188  0020                     ?_Transmitir:	
   189                           ; 1 bytes @ 0x0
   190                           
   191  0020                     ?_LeerBit:	
   192                           ; 1 bytes @ 0x0
   193                           
   194  0020                     ?_Retardo:	
   195                           ; 1 bytes @ 0x0
   196                           
   197  0020                     ?_main:	
   198                           ; 1 bytes @ 0x0
   199                           
   200  0020                     ?_ISR:	
   201                           ; 1 bytes @ 0x0
   202                           
   203  0020                     ??_ISR:	
   204                           ; 1 bytes @ 0x0
   205                           
   206  0020                     Transmitir@BufferTx:	
   207                           ; 1 bytes @ 0x0
   208                           
   209                           
   210                           ; 1 bytes @ 0x0
   211  0020                     	ds	2
   212  0022                     ??_LeerBit:	
   213  0022                     ??_Retardo:	
   214                           ; 1 bytes @ 0x2
   215                           
   216                           
   217                           ; 1 bytes @ 0x2
   218  0022                     	ds	1
   219  0023                     LeerBit@res:	
   220                           
   221                           ; 1 bytes @ 0x3
   222  0023                     	ds	1
   223  0024                     ??_LeerByte:	
   224                           
   225                           ; 1 bytes @ 0x4
   226  0024                     	ds	3
   227  0027                     LeerByte@res:	
   228                           
   229                           ; 1 bytes @ 0x7
   230  0027                     	ds	1
   231  0028                     LeerByte@i:	
   232                           
   233                           ; 1 bytes @ 0x8
   234  0028                     	ds	1
   235  0029                     ??_main:	
   236                           
   237                           ; 1 bytes @ 0x9
   238  0029                     	ds	3
   239                           
   240                           	psect	maintext
   241  0014                     __pmaintext:	
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 43 in file "Main12F.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;		None
   250 ;; Auto vars:     Size  Location     Type
   251 ;;		None
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, status,2, status,0, pclath, cstack
   256 ;; Tracked objects:
   257 ;;		On entry : B00/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMMON   BANK0
   261 ;;      Params:         0       0
   262 ;;      Locals:         0       0
   263 ;;      Temps:          0       3
   264 ;;      Totals:         0       3
   265 ;;Total ram usage:        3 bytes
   266 ;; Hardware stack levels required when called:    3
   267 ;; This function calls:
   268 ;;		_LeerByte
   269 ;;		_Transmitir
   270 ;; This function is called by:
   271 ;;		Startup code after reset
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           
   276                           ;psect for function _main
   277  0014                     _main:	
   278  0014                     l914:	
   279                           ;incstack = 0
   280                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   281                           
   282                           
   283                           ;Main12F.c: 45:     ANSEL = 0x00;
   284  0014  1683               	bsf	3,5	;RP0=1, select bank1
   285  0015  019F               	clrf	31	;volatile
   286  0016                     l916:	
   287                           
   288                           ;Main12F.c: 46:     CMCON = 0x07;
   289  0016  3007               	movlw	7
   290  0017  1283               	bcf	3,5	;RP0=0, select bank0
   291  0018  0099               	movwf	25	;volatile
   292  0019                     l918:	
   293                           
   294                           ;Main12F.c: 47:     TRISIO = 0b00100000;
   295  0019  3020               	movlw	32
   296  001A  1683               	bsf	3,5	;RP0=1, select bank1
   297  001B  0085               	movwf	5	;volatile
   298                           
   299                           ;Main12F.c: 48:     GPIO = 0;
   300  001C  1283               	bcf	3,5	;RP0=0, select bank0
   301  001D  0185               	clrf	5	;volatile
   302                           
   303                           ;Main12F.c: 49:     WPU=0;
   304  001E  1683               	bsf	3,5	;RP0=1, select bank1
   305  001F  0195               	clrf	21	;volatile
   306  0020                     l920:	
   307                           
   308                           ;Main12F.c: 50:     GP1=1;
   309  0020  1283               	bcf	3,5	;RP0=0, select bank0
   310  0021  1485               	bsf	5,1	;volatile
   311  0022                     l922:	
   312                           
   313                           ;Main12F.c: 51:     GPIO4=1;
   314  0022  1605               	bsf	5,4	;volatile
   315  0023                     l924:	
   316                           
   317                           ;Main12F.c: 54:     OPTION_REG=0xC7;
   318  0023  30C7               	movlw	199
   319  0024  1683               	bsf	3,5	;RP0=1, select bank1
   320  0025  0081               	movwf	1	;volatile
   321  0026                     l926:	
   322                           
   323                           ;Main12F.c: 55:     T0IF=0;
   324  0026  110B               	bcf	11,2	;volatile
   325  0027                     l928:	
   326                           
   327                           ;Main12F.c: 56:     TMR0=0;
   328  0027  1283               	bcf	3,5	;RP0=0, select bank0
   329  0028  0181               	clrf	1	;volatile
   330  0029                     l930:	
   331                           
   332                           ;Main12F.c: 59:     T0IE=1;
   333  0029  168B               	bsf	11,5	;volatile
   334  002A                     l932:	
   335                           
   336                           ;Main12F.c: 61:     GIE=1;
   337  002A  178B               	bsf	11,7	;volatile
   338  002B                     l934:	
   339                           
   340                           ;Main12F.c: 62:     TRISIO5=1;
   341  002B  1683               	bsf	3,5	;RP0=1, select bank1
   342  002C  1685               	bsf	5,5	;volatile
   343                           
   344                           ;Main12F.c: 63:     _delay((unsigned long)((1000)*(4000000/4000.0)));
   345  002D  3006               	movlw	6
   346  002E  1283               	bcf	3,5	;RP0=0, select bank0
   347  002F  00AB               	movwf	??_main+2
   348  0030  3013               	movlw	19
   349  0031  00AA               	movwf	??_main+1
   350  0032  30AD               	movlw	173
   351  0033  00A9               	movwf	??_main
   352  0034                     u217:	
   353  0034  0BA9               	decfsz	??_main,f
   354  0035  2834               	goto	u217
   355  0036  0BAA               	decfsz	??_main+1,f
   356  0037  2834               	goto	u217
   357  0038  0BAB               	decfsz	??_main+2,f
   358  0039  2834               	goto	u217
   359  003A  283B               	nop2
   360  003B                     l936:	
   361                           
   362                           ;Main12F.c: 64:     GP1=0;
   363  003B  1283               	bcf	3,5	;RP0=0, select bank0
   364  003C  1085               	bcf	5,1	;volatile
   365  003D                     l55:	
   366                           ;Main12F.c: 65:     while(1){
   367                           
   368                           
   369                           ;Main12F.c: 66:         _delay((unsigned long)((1000)*(4000000/4000.0)));
   370  003D  3006               	movlw	6
   371  003E  00AB               	movwf	??_main+2
   372  003F  3013               	movlw	19
   373  0040  00AA               	movwf	??_main+1
   374  0041  30AD               	movlw	173
   375  0042  00A9               	movwf	??_main
   376  0043                     u227:	
   377  0043  0BA9               	decfsz	??_main,f
   378  0044  2843               	goto	u227
   379  0045  0BAA               	decfsz	??_main+1,f
   380  0046  2843               	goto	u227
   381  0047  0BAB               	decfsz	??_main+2,f
   382  0048  2843               	goto	u227
   383  0049  284A               	nop2
   384  004A                     l938:	
   385                           
   386                           ;Main12F.c: 67:         TRISIO5=0;
   387  004A  1683               	bsf	3,5	;RP0=1, select bank1
   388  004B  1285               	bcf	5,5	;volatile
   389  004C                     l940:	
   390                           
   391                           ;Main12F.c: 68:         GPIO5=0;
   392  004C  1283               	bcf	3,5	;RP0=0, select bank0
   393  004D  1285               	bcf	5,5	;volatile
   394                           
   395                           ;Main12F.c: 69:         _delay((unsigned long)((18)*(4000000/4000.0)));
   396  004E  3018               	movlw	24
   397  004F  00AA               	movwf	??_main+1
   398  0050  305F               	movlw	95
   399  0051  00A9               	movwf	??_main
   400  0052                     u237:	
   401  0052  0BA9               	decfsz	??_main,f
   402  0053  2852               	goto	u237
   403  0054  0BAA               	decfsz	??_main+1,f
   404  0055  2852               	goto	u237
   405  0056                     l942:	
   406                           
   407                           ;Main12F.c: 70:         TRISIO5=1;
   408  0056  1683               	bsf	3,5	;RP0=1, select bank1
   409  0057  1685               	bsf	5,5	;volatile
   410  0058                     l56:	
   411                           ;Main12F.c: 73:         }
   412                           
   413                           
   414                           ;Main12F.c: 71:         while(GPIO5==1){
   415  0058  1283               	bcf	3,5	;RP0=0, select bank0
   416  0059  1A85               	btfsc	5,5	;volatile
   417  005A  285C               	goto	u161
   418  005B  285D               	goto	u160
   419  005C                     u161:	
   420  005C  2858               	goto	l56
   421  005D                     u160:	
   422  005D                     l944:	
   423                           
   424                           ;Main12F.c: 74:         _delay((unsigned long)((120)*(4000000/4000000.0)));
   425  005D  3027               	movlw	39
   426  005E  00A9               	movwf	??_main
   427  005F                     u247:	
   428  005F  0BA9               	decfsz	??_main,f
   429  0060  285F               	goto	u247
   430  0061  2862               	nop2
   431  0062                     l59:	
   432                           ;Main12F.c: 77:         }
   433                           
   434                           
   435                           ;Main12F.c: 75:         while(GPIO5==1){
   436  0062  1283               	bcf	3,5	;RP0=0, select bank0
   437  0063  1A85               	btfsc	5,5	;volatile
   438  0064  2866               	goto	u171
   439  0065  2867               	goto	u170
   440  0066                     u171:	
   441  0066  2862               	goto	l59
   442  0067                     u170:	
   443  0067                     l946:	
   444                           
   445                           ;Main12F.c: 78:         Hum=LeerByte();
   446  0067  20DA               	fcall	_LeerByte
   447  0068  1283               	bcf	3,5	;RP0=0, select bank0
   448  0069  00A9               	movwf	??_main
   449  006A  0829               	movf	??_main,w
   450  006B  00AE               	movwf	_Hum
   451                           
   452                           ;Main12F.c: 79:         LeerByte();
   453  006C  20DA               	fcall	_LeerByte
   454                           
   455                           ;Main12F.c: 80:         Temp=LeerByte();
   456  006D  20DA               	fcall	_LeerByte
   457  006E  1283               	bcf	3,5	;RP0=0, select bank0
   458  006F  00A9               	movwf	??_main
   459  0070  0829               	movf	??_main,w
   460  0071  00AF               	movwf	_Temp
   461                           
   462                           ;Main12F.c: 81:         Transmitir(0x99);
   463  0072  3099               	movlw	153
   464  0073  208A               	fcall	_Transmitir
   465  0074                     l948:	
   466                           
   467                           ;Main12F.c: 82:         GP1=0;
   468  0074  1283               	bcf	3,5	;RP0=0, select bank0
   469  0075  1085               	bcf	5,1	;volatile
   470  0076                     l950:	
   471                           
   472                           ;Main12F.c: 83:         if(Hum==48){
   473  0076  3030               	movlw	48
   474  0077  062E               	xorwf	_Hum,w
   475  0078  1D03               	btfss	3,2
   476  0079  287B               	goto	u181
   477  007A  287C               	goto	u180
   478  007B                     u181:	
   479  007B  287E               	goto	l62
   480  007C                     u180:	
   481  007C                     l952:	
   482                           
   483                           ;Main12F.c: 84:             GP1=1;
   484  007C  1485               	bsf	5,1	;volatile
   485                           
   486                           ;Main12F.c: 85:         }
   487  007D  287F               	goto	l954
   488  007E                     l62:	
   489                           ;Main12F.c: 86:         else{
   490                           
   491                           
   492                           ;Main12F.c: 87:             GP1=0;
   493  007E  1085               	bcf	5,1	;volatile
   494  007F                     l954:	
   495                           
   496                           ;Main12F.c: 89:         if(Temp==20){
   497  007F  3014               	movlw	20
   498  0080  062F               	xorwf	_Temp,w
   499  0081  1D03               	btfss	3,2
   500  0082  2884               	goto	u191
   501  0083  2885               	goto	u190
   502  0084                     u191:	
   503  0084  2887               	goto	l64
   504  0085                     u190:	
   505  0085                     l956:	
   506                           
   507                           ;Main12F.c: 90:             GP2=1;
   508  0085  1505               	bsf	5,2	;volatile
   509                           
   510                           ;Main12F.c: 91:         }
   511  0086  283D               	goto	l55
   512  0087                     l64:	
   513                           ;Main12F.c: 92:         else{
   514                           
   515                           
   516                           ;Main12F.c: 93:             GP2=0;
   517  0087  1105               	bcf	5,2	;volatile
   518  0088  283D               	goto	l55
   519  0089  280B               	ljmp	start
   520  008A                     __end_of_main:	
   521                           
   522                           	psect	text1
   523  008A                     __ptext1:	
   524 ;; *************** function _Transmitir *****************
   525 ;; Defined at:
   526 ;;		line 124 in file "Main12F.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  BufferTx        1    wreg     unsigned char 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;  BufferTx        1    0[BANK0 ] unsigned char 
   531 ;;  i               2    0        int 
   532 ;;  j               2    0        int 
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0
   542 ;;      Params:         0       0
   543 ;;      Locals:         0       2
   544 ;;      Temps:          0       0
   545 ;;      Totals:         0       2
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		_Retardo
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _Transmitir
   558  008A                     _Transmitir:	
   559  008A                     l864:	
   560                           ;incstack = 0
   561                           ; Regs used in _Transmitir: [wreg+status,2+status,0+pclath+cstack]
   562                           
   563  008A                     l866:	
   564                           
   565                           ;Main12F.c: 127:     TMR0=0;
   566  008A  1283               	bcf	3,5	;RP0=0, select bank0
   567  008B  0181               	clrf	1	;volatile
   568  008C                     l868:	
   569                           
   570                           ;Main12F.c: 129:     GPIO4=0;
   571  008C  1205               	bcf	5,4	;volatile
   572  008D                     l870:	
   573                           
   574                           ;Main12F.c: 130:     Retardo();
   575  008D  2101               	fcall	_Retardo
   576  008E                     l872:	
   577                           
   578                           ;Main12F.c: 133:     TMR0=0;
   579  008E  1283               	bcf	3,5	;RP0=0, select bank0
   580  008F  0181               	clrf	1	;volatile
   581  0090                     l874:	
   582                           
   583                           ;Main12F.c: 134:     GPIO4=0;
   584  0090  1205               	bcf	5,4	;volatile
   585                           
   586                           ;Main12F.c: 135:     Retardo();
   587  0091  2101               	fcall	_Retardo
   588  0092                     l876:	
   589                           
   590                           ;Main12F.c: 137:     TMR0=0;
   591  0092  1283               	bcf	3,5	;RP0=0, select bank0
   592  0093  0181               	clrf	1	;volatile
   593  0094                     l878:	
   594                           
   595                           ;Main12F.c: 138:     GPIO4=0;
   596  0094  1205               	bcf	5,4	;volatile
   597  0095                     l880:	
   598                           
   599                           ;Main12F.c: 139:     Retardo();
   600  0095  2101               	fcall	_Retardo
   601                           
   602                           ;Main12F.c: 141:     TMR0=0;
   603  0096  1283               	bcf	3,5	;RP0=0, select bank0
   604  0097  0181               	clrf	1	;volatile
   605  0098                     l882:	
   606                           
   607                           ;Main12F.c: 142:     GPIO4=0;
   608  0098  1205               	bcf	5,4	;volatile
   609  0099                     l884:	
   610                           
   611                           ;Main12F.c: 143:     Retardo();
   612  0099  2101               	fcall	_Retardo
   613  009A                     l886:	
   614                           
   615                           ;Main12F.c: 145:     TMR0=0;
   616  009A  1283               	bcf	3,5	;RP0=0, select bank0
   617  009B  0181               	clrf	1	;volatile
   618  009C                     l888:	
   619                           
   620                           ;Main12F.c: 146:     GPIO4=0;
   621  009C  1205               	bcf	5,4	;volatile
   622                           
   623                           ;Main12F.c: 147:     Retardo();
   624  009D  2101               	fcall	_Retardo
   625  009E                     l890:	
   626                           
   627                           ;Main12F.c: 149:     TMR0=0;
   628  009E  1283               	bcf	3,5	;RP0=0, select bank0
   629  009F  0181               	clrf	1	;volatile
   630  00A0                     l892:	
   631                           
   632                           ;Main12F.c: 150:     GPIO4=1;
   633  00A0  1605               	bsf	5,4	;volatile
   634  00A1                     l894:	
   635                           
   636                           ;Main12F.c: 151:     Retardo();
   637  00A1  2101               	fcall	_Retardo
   638                           
   639                           ;Main12F.c: 153:     TMR0=0;
   640  00A2  1283               	bcf	3,5	;RP0=0, select bank0
   641  00A3  0181               	clrf	1	;volatile
   642  00A4                     l896:	
   643                           
   644                           ;Main12F.c: 154:     GPIO4=1;
   645  00A4  1605               	bsf	5,4	;volatile
   646  00A5                     l898:	
   647                           
   648                           ;Main12F.c: 155:     Retardo();
   649  00A5  2101               	fcall	_Retardo
   650  00A6                     l900:	
   651                           
   652                           ;Main12F.c: 157:     TMR0=0;
   653  00A6  1283               	bcf	3,5	;RP0=0, select bank0
   654  00A7  0181               	clrf	1	;volatile
   655  00A8                     l902:	
   656                           
   657                           ;Main12F.c: 158:     GPIO4=0;
   658  00A8  1205               	bcf	5,4	;volatile
   659                           
   660                           ;Main12F.c: 159:     Retardo();
   661  00A9  2101               	fcall	_Retardo
   662  00AA                     l904:	
   663                           
   664                           ;Main12F.c: 161:     TMR0=0;
   665  00AA  1283               	bcf	3,5	;RP0=0, select bank0
   666  00AB  0181               	clrf	1	;volatile
   667  00AC                     l906:	
   668                           
   669                           ;Main12F.c: 162:     GPIO4=0;
   670  00AC  1205               	bcf	5,4	;volatile
   671  00AD                     l908:	
   672                           
   673                           ;Main12F.c: 163:     Retardo();
   674  00AD  2101               	fcall	_Retardo
   675                           
   676                           ;Main12F.c: 165:     TMR0=0;
   677  00AE  1283               	bcf	3,5	;RP0=0, select bank0
   678  00AF  0181               	clrf	1	;volatile
   679  00B0                     l910:	
   680                           
   681                           ;Main12F.c: 166:     GPIO4=1;
   682  00B0  1605               	bsf	5,4	;volatile
   683  00B1                     l912:	
   684                           
   685                           ;Main12F.c: 167:     Retardo();
   686  00B1  2101               	fcall	_Retardo
   687  00B2                     l87:	
   688  00B2  0008               	return
   689  00B3                     __end_of_Transmitir:	
   690                           
   691                           	psect	text2
   692  0101                     __ptext2:	
   693 ;; *************** function _Retardo *****************
   694 ;; Defined at:
   695 ;;		line 169 in file "Main12F.c"
   696 ;; Parameters:    Size  Location     Type
   697 ;;		None
   698 ;; Auto vars:     Size  Location     Type
   699 ;;		None
   700 ;; Return value:  Size  Location     Type
   701 ;;                  1    wreg      void 
   702 ;; Registers used:
   703 ;;		wreg
   704 ;; Tracked objects:
   705 ;;		On entry : 0/0
   706 ;;		On exit  : 0/0
   707 ;;		Unchanged: 0/0
   708 ;; Data sizes:     COMMON   BANK0
   709 ;;      Params:         0       0
   710 ;;      Locals:         0       0
   711 ;;      Temps:          0       1
   712 ;;      Totals:         0       1
   713 ;;Total ram usage:        1 bytes
   714 ;; Hardware stack levels used:    1
   715 ;; Hardware stack levels required when called:    1
   716 ;; This function calls:
   717 ;;		Nothing
   718 ;; This function is called by:
   719 ;;		_Transmitir
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723                           
   724                           ;psect for function _Retardo
   725  0101                     _Retardo:	
   726  0101                     l844:	
   727                           ;incstack = 0
   728                           ; Regs used in _Retardo: [wreg]
   729                           
   730                           
   731                           ;Main12F.c: 170:     _delay((unsigned long)((108)*(4000000/4000000.0)));
   732  0101  3023               	movlw	35
   733  0102  1283               	bcf	3,5	;RP0=0, select bank0
   734  0103  00A2               	movwf	??_Retardo
   735  0104                     u257:	
   736  0104  0BA2               	decfsz	??_Retardo,f
   737  0105  2904               	goto	u257
   738  0106  2907               	nop2
   739  0107                     l90:	
   740  0107  0008               	return
   741  0108                     __end_of_Retardo:	
   742                           
   743                           	psect	text3
   744  00DA                     __ptext3:	
   745 ;; *************** function _LeerByte *****************
   746 ;; Defined at:
   747 ;;		line 98 in file "Main12F.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;  i               1    8[BANK0 ] unsigned char 
   752 ;;  res             1    7[BANK0 ] unsigned char 
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      unsigned char 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0
   762 ;;      Params:         0       0
   763 ;;      Locals:         0       2
   764 ;;      Temps:          0       3
   765 ;;      Totals:         0       5
   766 ;;Total ram usage:        5 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_LeerBit
   771 ;; This function is called by:
   772 ;;		_main
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _LeerByte
   778  00DA                     _LeerByte:	
   779  00DA                     l846:	
   780                           ;incstack = 0
   781                           ; Regs used in _LeerByte: [wreg+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;Main12F.c: 99:   unsigned char res=0,i;
   785  00DA  1283               	bcf	3,5	;RP0=0, select bank0
   786  00DB  01A7               	clrf	LeerByte@res
   787  00DC                     l848:	
   788                           
   789                           ;Main12F.c: 101:   for(i=8;i>0;i--){
   790  00DC  3008               	movlw	8
   791  00DD  00A4               	movwf	??_LeerByte
   792  00DE  0824               	movf	??_LeerByte,w
   793  00DF  00A8               	movwf	LeerByte@i
   794  00E0                     l854:	
   795                           
   796                           ;Main12F.c: 102:     res=(res<<1) | LeerBit();
   797  00E0  20B3               	fcall	_LeerBit
   798  00E1  1283               	bcf	3,5	;RP0=0, select bank0
   799  00E2  00A4               	movwf	??_LeerByte
   800  00E3  0827               	movf	LeerByte@res,w
   801  00E4  00A5               	movwf	??_LeerByte+1
   802  00E5  0725               	addwf	??_LeerByte+1,w
   803  00E6  0424               	iorwf	??_LeerByte,w
   804  00E7  00A6               	movwf	??_LeerByte+2
   805  00E8  0826               	movf	??_LeerByte+2,w
   806  00E9  00A7               	movwf	LeerByte@res
   807  00EA                     l856:	
   808                           
   809                           ;Main12F.c: 103:   }
   810  00EA  3001               	movlw	1
   811  00EB  02A8               	subwf	LeerByte@i,f
   812  00EC                     l858:	
   813  00EC  0828               	movf	LeerByte@i,w
   814  00ED  1D03               	btfss	3,2
   815  00EE  28F0               	goto	u151
   816  00EF  28F1               	goto	u150
   817  00F0                     u151:	
   818  00F0  28E0               	goto	l854
   819  00F1                     u150:	
   820  00F1                     l860:	
   821                           
   822                           ;Main12F.c: 104:   return res;
   823  00F1  0827               	movf	LeerByte@res,w
   824  00F2                     l73:	
   825  00F2  0008               	return
   826  00F3                     __end_of_LeerByte:	
   827                           
   828                           	psect	text4
   829  00B3                     __ptext4:	
   830 ;; *************** function _LeerBit *****************
   831 ;; Defined at:
   832 ;;		line 106 in file "Main12F.c"
   833 ;; Parameters:    Size  Location     Type
   834 ;;		None
   835 ;; Auto vars:     Size  Location     Type
   836 ;;  res             1    3[BANK0 ] unsigned char 
   837 ;; Return value:  Size  Location     Type
   838 ;;                  1    wreg      unsigned char 
   839 ;; Registers used:
   840 ;;		wreg, status,2
   841 ;; Tracked objects:
   842 ;;		On entry : 0/0
   843 ;;		On exit  : 0/0
   844 ;;		Unchanged: 0/0
   845 ;; Data sizes:     COMMON   BANK0
   846 ;;      Params:         0       0
   847 ;;      Locals:         0       1
   848 ;;      Temps:          0       1
   849 ;;      Totals:         0       2
   850 ;;Total ram usage:        2 bytes
   851 ;; Hardware stack levels used:    1
   852 ;; Hardware stack levels required when called:    1
   853 ;; This function calls:
   854 ;;		Nothing
   855 ;; This function is called by:
   856 ;;		_LeerByte
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _LeerBit
   862  00B3                     _LeerBit:	
   863  00B3                     l826:	
   864                           ;incstack = 0
   865                           ; Regs used in _LeerBit: [wreg+status,2]
   866                           
   867                           
   868                           ;Main12F.c: 107:     unsigned char res=0;
   869  00B3  1283               	bcf	3,5	;RP0=0, select bank0
   870  00B4  01A3               	clrf	LeerBit@res
   871                           
   872                           ;Main12F.c: 108:      while(GPIO5==0){
   873  00B5  28B7               	goto	l76
   874  00B6                     l77:	
   875                           
   876                           ;Main12F.c: 109:         GP1=1;
   877  00B6  1485               	bsf	5,1	;volatile
   878  00B7                     l76:	
   879                           ;Main12F.c: 110:      }
   880                           
   881                           
   882                           ;Main12F.c: 108:      while(GPIO5==0){
   883  00B7  1E85               	btfss	5,5	;volatile
   884  00B8  28BA               	goto	u111
   885  00B9  28BB               	goto	u110
   886  00BA                     u111:	
   887  00BA  28B6               	goto	l77
   888  00BB                     u110:	
   889  00BB                     l828:	
   890                           
   891                           ;Main12F.c: 111:      _delay((unsigned long)((13)*(4000000/4000000.0)));
   892  00BB  3004               	movlw	4
   893  00BC  00A2               	movwf	??_LeerBit
   894  00BD                     u267:	
   895  00BD  0BA2               	decfsz	??_LeerBit,f
   896  00BE  28BD               	goto	u267
   897  00BF                     l830:	
   898                           
   899                           ;Main12F.c: 112:      if(GPIO5==1) res=0;
   900  00BF  1283               	bcf	3,5	;RP0=0, select bank0
   901  00C0  1E85               	btfss	5,5	;volatile
   902  00C1  28C3               	goto	u121
   903  00C2  28C4               	goto	u120
   904  00C3                     u121:	
   905  00C3  28C5               	goto	l834
   906  00C4                     u120:	
   907  00C4                     l832:	
   908  00C4  01A3               	clrf	LeerBit@res
   909  00C5                     l834:	
   910                           
   911                           ;Main12F.c: 113:      _delay((unsigned long)((22)*(4000000/4000000.0)));
   912  00C5  3007               	movlw	7
   913  00C6  00A2               	movwf	??_LeerBit
   914  00C7                     u277:	
   915  00C7  0BA2               	decfsz	??_LeerBit,f
   916  00C8  28C7               	goto	u277
   917  00C9                     l836:	
   918                           
   919                           ;Main12F.c: 114:      if(GPIO5==1){
   920  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   921  00CA  1E85               	btfss	5,5	;volatile
   922  00CB  28CD               	goto	u131
   923  00CC  28CE               	goto	u130
   924  00CD                     u131:	
   925  00CD  28D6               	goto	l80
   926  00CE                     u130:	
   927  00CE                     l838:	
   928                           
   929                           ;Main12F.c: 115:        res=1;
   930  00CE  01A3               	clrf	LeerBit@res
   931  00CF  0AA3               	incf	LeerBit@res,f
   932                           
   933                           ;Main12F.c: 116:        while(GPIO5==1){
   934  00D0  28D2               	goto	l81
   935  00D1                     l82:	
   936                           
   937                           ;Main12F.c: 117:           GP2=1;
   938  00D1  1505               	bsf	5,2	;volatile
   939  00D2                     l81:	
   940                           ;Main12F.c: 118:        }
   941                           
   942                           
   943                           ;Main12F.c: 116:        while(GPIO5==1){
   944  00D2  1A85               	btfsc	5,5	;volatile
   945  00D3  28D5               	goto	u141
   946  00D4  28D6               	goto	u140
   947  00D5                     u141:	
   948  00D5  28D1               	goto	l82
   949  00D6                     u140:	
   950  00D6                     l80:	
   951                           ;Main12F.c: 119:      }
   952                           
   953                           
   954                           ;Main12F.c: 120:      GP1=0;
   955  00D6  1085               	bcf	5,1	;volatile
   956                           
   957                           ;Main12F.c: 121:      GP2=0;
   958  00D7  1105               	bcf	5,2	;volatile
   959  00D8                     l840:	
   960                           
   961                           ;Main12F.c: 122:      return res;
   962  00D8  0823               	movf	LeerBit@res,w
   963  00D9                     l84:	
   964  00D9  0008               	return
   965  00DA                     __end_of_LeerBit:	
   966                           
   967                           	psect	text5
   968  00F3                     __ptext5:	
   969 ;; *************** function _ISR *****************
   970 ;; Defined at:
   971 ;;		line 172 in file "Main12F.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0
   985 ;;      Params:         0       0
   986 ;;      Locals:         0       0
   987 ;;      Temps:          0       2
   988 ;;      Totals:         0       2
   989 ;;Total ram usage:        2 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		Interrupt level 1
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _ISR
  1000  00F3                     _ISR:	
  1001  00F3                     i1l958:	
  1002                           
  1003                           ;Main12F.c: 173:     if(T0IF==1){
  1004  00F3  1D0B               	btfss	11,2	;volatile
  1005  00F4  28F6               	goto	u20_21
  1006  00F5  28F7               	goto	u20_20
  1007  00F6                     u20_21:	
  1008  00F6  28FA               	goto	i1l96
  1009  00F7                     u20_20:	
  1010  00F7                     i1l960:	
  1011                           
  1012                           ;Main12F.c: 174:             T0IF=0;
  1013  00F7  110B               	bcf	11,2	;volatile
  1014  00F8                     i1l962:	
  1015                           
  1016                           ;Main12F.c: 175:             GPIO0=GPIO0^ 1;
  1017  00F8  3001               	movlw	1
  1018  00F9  0685               	xorwf	5,f
  1019  00FA                     i1l96:	
  1020  00FA  0821               	movf	??_ISR+1,w
  1021  00FB  008A               	movwf	10
  1022  00FC  0E20               	swapf	??_ISR^0,w
  1023  00FD  0083               	movwf	3
  1024  00FE  0EDE               	swapf	btemp,f
  1025  00FF  0E5E               	swapf	btemp,w
  1026  0100  0009               	retfie
  1027  0101                     __end_of_ISR:	
  1028  005E                     btemp	set	94	;btemp
  1029  005E                     wtemp0	set	94
  1030                           
  1031                           	psect	intentry
  1032  0004                     __pintentry:	
  1033                           ;incstack = 0
  1034                           ; Regs used in _ISR: [wreg]
  1035                           
  1036  0004                     interrupt_function:	
  1037  005E                     saved_w	set	btemp
  1038  0004  00DE               	movwf	btemp
  1039  0005  0E03               	swapf	3,w
  1040  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1041  0007  00A0               	movwf	??_ISR
  1042  0008  080A               	movf	10,w
  1043  0009  00A1               	movwf	??_ISR+1
  1044  000A  28F3               	ljmp	_ISR


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     12      16

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_LeerByte
    _Transmitir->_Retardo
    _LeerByte->_LeerBit

Critical Paths under _ISR in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     118
                                              9 BANK0      3     3      0
                           _LeerByte
                         _Transmitir
 ---------------------------------------------------------------------------------
 (1) _Transmitir                                           5     5      0       1
                                              3 BANK0      2     2      0
                            _Retardo
 ---------------------------------------------------------------------------------
 (2) _Retardo                                              1     1      0       0
                                              2 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LeerByte                                             5     5      0     117
                                              4 BANK0      5     5      0
                            _LeerBit
 ---------------------------------------------------------------------------------
 (2) _LeerBit                                              2     2      0      25
                                              2 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LeerByte
     _LeerBit
   _Transmitir
     _Retardo

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               3E      C      10       4       25.8%
BITBANK0            3E      0       0       3        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      10       6        0.0%
ABS                  0      0      10       5        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Sep 04 14:15:58 2022

            __CFG_CP$OFF 0000                       l62 007E                       l55 003D  
                     l80 00D6                       l64 0087                       l56 0058  
                     l81 00D2                       l73 00F2                       l82 00D1  
                     l90 0107                       l59 0062                       l84 00D9  
                     l76 00B7                       l77 00B6                       l87 00B2  
     Transmitir@BufferTx 0020                      l900 00A6                      l830 00BF  
                    l910 00B0                      l902 00A8                      l840 00D8  
                    l832 00C4                      l912 00B1                      l904 00AA  
                    l920 0020                      l834 00C5                      l826 00B3  
                    l906 00AC                      l930 0029                      l922 0022  
                    l914 0014                      l836 00C9                      l828 00BB  
                    l860 00F1                      l844 0101                      l908 00AD  
                    l940 004C                      l932 002A                      l924 0023  
                    l916 0016                      l838 00CE                      l854 00E0  
                    l846 00DA                      l870 008D                      l950 0076  
                    l942 0056                      l934 002B                      l926 0026  
                    l918 0019                      l856 00EA                      l848 00DC  
                    l880 0095                      l872 008E                      l864 008A  
                    l952 007C                      l944 005D                      l936 003B  
                    l928 0027                      l858 00EC                      l890 009E  
                    l882 0098                      l874 0090                      l866 008A  
                    l954 007F                      l946 0067                      l938 004A  
                    l892 00A0                      l884 0099                      l876 0092  
                    l868 008C                      l956 0085                      l948 0074  
                    _GP1 0029                      l894 00A1                      l886 009A  
                    l878 0094                      _GP2 002A                      l896 00A4  
                    l888 009C                      l898 00A5                      _GIE 005F  
                    u110 00BB                      u111 00BA                      u120 00C4  
                    u121 00C3                      u130 00CE                      u131 00CD  
                    u140 00D6                      u141 00D5                      u150 00F1  
                    u151 00F0                      u160 005D                      u161 005C  
                    u217 0034                      u170 0067                      u171 0066  
                    u227 0043                      u180 007C                      u181 007B  
                    u237 0052                      u190 0085                      u191 0084  
                    u247 005F                      u257 0104             __CFG_CPD$OFF 0000  
                    u267 00BD                      _ISR 00F3                      u277 00C7  
                    _Che 002D                      _WPU 0095                      _Hum 002E  
                   ?_ISR 0020                     _T0IE 005D                     _T0IF 005A  
                   _GPIO 0005                     i1l96 00FA                     _TMR0 0001  
                   _Temp 002F                     _main 0014                     btemp 005E  
          __CFG_BOREN$ON 0000                     start 000B            __CFG_MCLRE$ON 0000  
        __end_of_LeerBit 00DA                    ??_ISR 0020          __end_of_Retardo 0108  
                  ?_main 0020            __CFG_WDTE$OFF 0000                    _CMCON 0019  
                  _ANSEL 009F                    _GPIO0 0028                    _GPIO4 002C  
                  _GPIO5 002D                    i1l960 00F7                    i1l962 00F8  
                  i1l958 00F3                    u20_20 00F7                    u20_21 00F6  
                  pclath 000A                    status 0003                    wtemp0 005E  
        __initialization 000C         __end_of_LeerByte 00F3             __end_of_main 008A  
                 ??_main 0029                   _TRISIO 0085                ??_LeerBit 0022  
         __CFG_PWRTE$OFF 0000                ??_Retardo 0022                   saved_w 005E  
             _Transmitir 008A  __end_of__initialization 0012           __pcstackCOMMON 0000  
           __pidataBANK0 0108                ?_LeerByte 0020               __pbssBANK0 002C  
             __pmaintext 0014               __pintentry 0004                  _TRISIO5 042D  
            ?_Transmitir 0020               ??_LeerByte 0024                  _LeerBit 00B3  
                _Retardo 0101                  _bandera 002C                  __ptext1 008A  
                __ptext2 0101                  __ptext3 00DA                  __ptext4 00B3  
                __ptext5 00F3             __size_of_ISR 000E     end_of_initialization 0012  
    __size_of_Transmitir 0029                LeerByte@i 0028      start_initialization 000C  
            __end_of_ISR 0101        __size_of_LeerByte 0019              __pdataBANK0 002E  
              ___latbits 0000            __pcstackBANK0 0020             ??_Transmitir 0000  
               ?_LeerBit 0020                 ?_Retardo 0020       __end_of_Transmitir 00B3  
      interrupt_function 0004                 _LeerByte 00DA         __size_of_LeerBit 0027  
       __size_of_Retardo 0007            __size_of_main 0076                 intlevel1 0000  
             _OPTION_REG 0081        __CFG_FOSC$INTRCIO 0000               LeerBit@res 0023  
            LeerByte@res 0027  
